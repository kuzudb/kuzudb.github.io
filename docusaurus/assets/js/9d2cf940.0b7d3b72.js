"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[5496],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=u(n),c=r,k=d["".concat(i,".").concat(c)]||d[c]||m[c]||l;return n?a.createElement(k,p(p({ref:t},s),{},{components:n})):a.createElement(k,p({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,p=new Array(l);p[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:r,p[1]=o;for(var u=2;u<l;u++)p[u]=n[u];return a.createElement.apply(null,p)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},3408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const l={title:"Call",sidebar_position:11,description:"CALL clause is a reading clause used for executing schema functions."},p="CALL",o={unversionedId:"cypher/query-clauses/call",id:"cypher/query-clauses/call",title:"Call",description:"CALL clause is a reading clause used for executing schema functions.",source:"@site/docs/cypher/query-clauses/call.md",sourceDirName:"cypher/query-clauses",slug:"/cypher/query-clauses/call",permalink:"/docusaurus/cypher/query-clauses/call",draft:!1,tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Call",sidebar_position:11,description:"CALL clause is a reading clause used for executing schema functions."},sidebar:"docSidebar",previous:{title:"Unwind",permalink:"/docusaurus/cypher/query-clauses/unwind"},next:{title:"Scan",permalink:"/docusaurus/cypher/load_from"}},i={},u=[{value:"TABLE_INFO",id:"table_info",level:3},{value:"CURRENT_SETTING",id:"current_setting",level:3},{value:"DB_VERSION",id:"db_version",level:3},{value:"SHOW_TABLES",id:"show_tables",level:3},{value:"SHOW_CONNECTION",id:"show_connection",level:3},{value:"READ_PANDAS",id:"read_pandas",level:3}],s={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"call"},"CALL"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CALL")," clause is a reading clause used for executing schema functions. The following tables lists built-in schema functions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TABLE_INFO('tableName')"),(0,r.kt)("td",{parentName:"tr",align:null},"returns metadata information of the given table")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"CURRENT_SETTING('setting')"),(0,r.kt)("td",{parentName:"tr",align:null},"returns the value of the given setting")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DB_VERSION()"),(0,r.kt)("td",{parentName:"tr",align:null},"returns the version of K\xf9zu")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SHOW_TABLES()"),(0,r.kt)("td",{parentName:"tr",align:null},"returns the name, type, comment of all tables in the database")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"READ_PANDAS(pd)"),(0,r.kt)("td",{parentName:"tr",align:null},"scans pandas dataframe")))),(0,r.kt)("h3",{id:"table_info"},"TABLE_INFO"),(0,r.kt)("p",null,"TABLE_INFO takes table name as a parameter and returns metadata information of the table. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Column"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"property id"),(0,r.kt)("td",{parentName:"tr",align:null},"Internal identifier of the property within table"),(0,r.kt)("td",{parentName:"tr",align:null},"INT64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"name of the property"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"data type of the property"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"primary key"),(0,r.kt)("td",{parentName:"tr",align:null},"if property is primary key"),(0,r.kt)("td",{parentName:"tr",align:null},"BOOLEAN")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL TABLE_INFO('User') return *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"---------------------------------------------\n| property id | name | type   | primary key |\n---------------------------------------------\n| 0           | name | STRING | True        |\n---------------------------------------------\n| 1           | age  | INT64  | False       |\n---------------------------------------------\n")),(0,r.kt)("h3",{id:"current_setting"},"CURRENT_SETTING"),(0,r.kt)("p",null,"CURRENT_SETTING returns the value of given database configuration."),(0,r.kt)("p",null,"All supported configurable database options can be found here: ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/cypher/configuration"},"configuration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL current_setting('threads') return *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-----------\n| threads |\n-----------\n| 8       |\n-----------\n")),(0,r.kt)("h3",{id:"db_version"},"DB_VERSION"),(0,r.kt)("p",null,"DB_VERSION returns current database version."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Column"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"database version"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL db_version() RETURN *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"----------------\n| KUZU_Version |\n----------------\n| v0.0.9       |\n----------------\n")),(0,r.kt)("h3",{id:"show_tables"},"SHOW_TABLES"),(0,r.kt)("p",null,"SHOW_TABLES returns the name, type and comment of all tables in the database."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Column"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"name of the table"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"type of the table"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"comment"),(0,r.kt)("td",{parentName:"tr",align:null},"comment of the table"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL show_tables() RETURN *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"--------------------------------------------\n| name        | type | comment             |\n--------------------------------------------\n| gf          | RDF  |                     |\n--------------------------------------------\n| gf_TRIPLES  | REL  |                     |\n--------------------------------------------\n| gf_RESOURCE | NODE |                     |\n--------------------------------------------\n| person      | NODE | person info         |\n--------------------------------------------\n| knows       | REL  | person knows person |\n--------------------------------------------\n")),(0,r.kt)("h3",{id:"show_connection"},"SHOW_CONNECTION"),(0,r.kt)("p",null,"SHOW_CONNECTION returns the source/destination nodes for a rel/relgroup in the database."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Column"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"source table name"),(0,r.kt)("td",{parentName:"tr",align:null},"name of the source node"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"destionation table name"),(0,r.kt)("td",{parentName:"tr",align:null},"name of the destionation node"),(0,r.kt)("td",{parentName:"tr",align:null},"STRING")))),(0,r.kt)("p",null,"Show connection on a rel table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL show_connection('knows') RETURN *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"----------------------------------------------\n| source table name | destination table name |\n----------------------------------------------\n| person            | person                 |\n----------------------------------------------\n")),(0,r.kt)("p",null,"Show connection on a rel group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CALL show_connection('knows') RETURN *;\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"----------------------------------------------\n| source table name | destination table name |\n----------------------------------------------\n| user              | person                 |\n----------------------------------------------\n| person            | person                 |\n----------------------------------------------\n")),(0,r.kt)("h3",{id:"read_pandas"},"READ_PANDAS"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"READ_PANDAS")," can be used to scan a pandas dataframe object. "),(0,r.kt)("p",null,'Consider the following pandas dataframe "person"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"id = np.array([0, 2, 3, 5, 7, 11, 13], dtype=np.int64)\nage = np.array([42, 23, 33, 57, 67, 39, 11], dtype=np.uint16)\nheight_in_cm = np.array([167, 172, 183, 199, 149, 154, 165], dtype=np.uint32)\nis_student = np.array([False, True, False, False, False, False, True], dtype=bool)\nperson = pd.DataFrame({'id': id, 'age': age, 'height': height_in_cm, 'is_student': is_student})\n")),(0,r.kt)("p",null,'You can scan "person" as a regular table through ',(0,r.kt)("inlineCode",{parentName:"p"},"READ_PANDAS")," function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"result = conn.execute('CALL READ_PANDAS(\"person\") RETURN age as age, height / 2.54 as height_in_inch').get_as_df()\nprint(result)\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    age   height_in_inch\n0   42       65.748031\n1   23       67.716535\n2   33       72.047244\n3   57       78.346457\n4   67       58.661417\n5   39       60.629921\n6   11       64.960630\n")))}m.isMDXComponent=!0}}]);