"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[4071],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,k=u["".concat(o,".").concat(c)]||u[c]||m[c]||i;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4475:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={title:"Testing Framework",sidebar_position:1},l="Testing Framework",s={unversionedId:"development/testing-framework",id:"development/testing-framework",title:"Testing Framework",description:"Introduction",source:"@site/docs/development/testing-framework.md",sourceDirName:"development",slug:"/development/testing-framework",permalink:"/docusaurus/development/testing-framework",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Testing Framework",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contributor Agreement",permalink:"/docusaurus/CLA"},next:{title:"Performance Debugging",permalink:"/docusaurus/development/performance-debugging"}},o={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Running the tests",id:"running-the-tests",level:2},{value:"Running a specific group or test case",id:"running-a-specific-group-or-test-case",level:3},{value:"1. Using ctest and specifying the name of the test. Example:",id:"1-using-ctest-and-specifying-the-name-of-the-test-example",level:3},{value:"2. Running directly from <code>e2e_test</code> binary",id:"2-running-directly-from-e2e_test-binary",level:3},{value:"Test file header",id:"test-file-header",level:2},{value:"Specifying the Dataset",id:"specifying-the-dataset",level:3},{value:"Converting CSV to Parquet",id:"converting-csv-to-parquet",level:4},{value:"Other properties",id:"other-properties",level:3},{value:"Test case",id:"test-case",level:2},{value:"Results",id:"results",level:3},{value:"Additional properties",id:"additional-properties",level:3},{value:"Defining variables",id:"defining-variables",level:3},{value:"Pre-defined variables",id:"pre-defined-variables",level:4},{value:"Defining statement blocks",id:"defining-statement-blocks",level:3},{value:"Examples",id:"examples",level:2}],d={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"testing-framework"},"Testing Framework"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://codecov.io/github/kuzudb/kuzu/branch/master/graph/badge.svg?token=N1AT6H79LM%22",alt:null}),"  "),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Testing is a crucial part of K\xf9zu to ensure the correct functioning of the\nsystem. The general principle for our testing is to avoid testing components individually,\ninstead we should route all tests, when possible, in the end-to-end way through Cypher statements.\nIn this way, we have designed a bespoke testing framework, which facilitates comprehensive end-to-end tests via Cypher statements."),(0,r.kt)("p",null,"In order to use the e2e testing framework, developers are required to generate\na ",(0,r.kt)("inlineCode",{parentName:"p"},".test")," file, which should be placed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"test/test_files")," directory. Each\ntest file comprises two key sections: the test header and test body.  In the header section,\nthe developer specifies the dataset to be used, the test group name and other optional\nparameters such as ",(0,r.kt)("inlineCode",{parentName:"p"},"BUFFER_POOL_SIZE"),"."),(0,r.kt)("p",null,"Here is a basic example of a test:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# test/test_files/basic.test\n# comments can also be addressed\n-GROUP Basic \n-DATASET CSV tinysnb\n-BUFFER_POOL_SIZE 64000000\n--\n\n-CASE BasicTest\n-STATEMENT MATCH (p:person) RETURN COUNT(*);\n---- 1\n6000\n")),(0,r.kt)("p",null,"The first three lines represents the header, separated by ",(0,r.kt)("inlineCode",{parentName:"p"},"--"),". The testing\nframework will parse the file and register a ",(0,r.kt)("a",{parentName:"p",href:"http://google.github.io/googletest/advanced.html#registering-tests-programmatically"},"GTest\nprogramatically"),".\nWhen it comes to the test case name, the provided example above would be equivalent to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"TEST_F(Basic, BasicTest) {\n...\n}\n")),(0,r.kt)("p",null,"The test framework will test each logical plan created from the prepared\nstatements and assert the result. "),(0,r.kt)("h2",{id:"running-the-tests"},"Running the tests"),(0,r.kt)("p",null,"Our primary tool for generating the test list and executing it is ",(0,r.kt)("inlineCode",{parentName:"p"},"ctest"),". Use the command\n",(0,r.kt)("inlineCode",{parentName:"p"},"make test")," to build and run all tests. By default, the tests will run\nconcurrently on 10 jobs, but it is also possible to change the number of parallel jobs by\nrunning ",(0,r.kt)("inlineCode",{parentName:"p"},"make test TEST_JOBS=<desired number of jobs to run in parallel>"),"."),(0,r.kt)("h3",{id:"running-a-specific-group-or-test-case"},"Running a specific group or test case"),(0,r.kt)("p",null,"There are two ways to run a specific e2e test or group of tests:"),(0,r.kt)("h3",{id:"1-using-ctest-and-specifying-the-name-of-the-test-example"},"1. Using ctest and specifying the name of the test. Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Run the all tests from StringPrimaryKeyTest group\n$ ctest -R StringPrimaryKeyTest\n\n# Run only PrimaryKeySecondColumn test\n$ ctest -R StringPrimaryKeyTest.PrimaryKeySecondColumn\n\n# Run in verbose mode\n$ ctest -V -R BinderErrorTest.MatchBuiltIn\n\n# Run in parallel\n$ ctest -j 10\n")),(0,r.kt)("h3",{id:"2-running-directly-from-e2e_test-binary"},"2. Running directly from ",(0,r.kt)("inlineCode",{parentName:"h3"},"e2e_test")," binary"),(0,r.kt)("p",null,"The test binaries are available in ",(0,r.kt)("inlineCode",{parentName:"p"},"build/release[or debug]/test/runner"),"\nfolder. You can run ",(0,r.kt)("inlineCode",{parentName:"p"},"e2e_test")," specifying the relative path file inside\n",(0,r.kt)("inlineCode",{parentName:"p"},"test_files"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Run all tests inside test/test_files/copy\n$ ./e2e_test copy\n\n# Run all tests from test/test_files/long_string_pk.test file\n$ ./e2e_test long_string_pk/long_string_pk.test\n\n# Run all tests\n$ ./e2e_test .\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," Some test files contain multiple test cases, and sometimes it is not easy\nto find the output from a failed test. In this situation, parameter\n",(0,r.kt)("inlineCode",{parentName:"p"},"--gtest_break_on_failure")," might be helpful to break the test on failure.")),(0,r.kt)("h2",{id:"test-file-header"},"Test file header"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},".test")," file header contains two required parameters: ",(0,r.kt)("inlineCode",{parentName:"p"},"-GROUP")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"-DATASET"),", to specify the test group name and the dataset to be used. If no\ndataset is required, use the keyword 'empty'."),(0,r.kt)("h3",{id:"specifying-the-dataset"},"Specifying the Dataset"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-DATASET [type] [dataset name]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"type:")," CSV, PARQUET, NPY or empty",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"dataset name:")," the name of the directory inside  ",(0,r.kt)("inlineCode",{parentName:"td"},"dataset/"),". i.e. tinysnb.")))),(0,r.kt)("p",null,"Examples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-GROUP MyTest\n-DATASET CSV tinysnb\n--\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-GROUP MyTest\n-DATASET PARQUET demo-db/parquet\n--\n")),(0,r.kt)("h4",{id:"converting-csv-to-parquet"},"Converting CSV to Parquet"),(0,r.kt)("p",null,"It is also possible to make a conversion from CSV dataset to PARQUET file format\nusing ",(0,r.kt)("inlineCode",{parentName:"p"},"CSV_TO_PARQUET(dataset path)"),". This case is especially useful to ensure\nthe expected result remains the same for both CSV and PARQUET file format\nwithout storing the same dataset in the codebase twice."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-GROUP MyTest\n-DATASET PARQUET CSV_TO_PARQUET(tinysnb)\n--\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," for the conversion, the framework does not match the current schema to\nthe parquet files. It relies on arrow to auto detect the datatype when reading\nand convering the CSV to Parquet.")),(0,r.kt)("h3",{id:"other-properties"},"Other properties"),(0,r.kt)("p",null,"Other optional parameters include ",(0,r.kt)("inlineCode",{parentName:"p"},"-BUFFER_POOL_SIZE")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"-SKIP"),". By including\n",(0,r.kt)("inlineCode",{parentName:"p"},"-SKIP")," in the header, the entire suite will be deactivated, but the tests\nwill still be displayed as disabled when running through ",(0,r.kt)("inlineCode",{parentName:"p"},"ctest"),"."),(0,r.kt)("h2",{id:"test-case"},"Test case"),(0,r.kt)("p",null,"The following example illustrates a basic structure of how to create a test case:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-GROUP Test\n-DATASET tinysnb\n--\n\n-CASE MyTest\n-LOG Test A Count\n-STATEMENT MATCH (p:person) RETURN COUNT(*);\n---- 1\n6000\n")),(0,r.kt)("p",null,"In the example above:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"-CASE")," is the name of the test case, analogous to ",(0,r.kt)("inlineCode",{parentName:"p"},"TEST_F(Test, MyTest)")," in C++.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"-LOG")," is optional and will be only used for display purposes when running in verbose mode.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"-STATEMENT")," is followed by 4 dashes ",(0,r.kt)("inlineCode",{parentName:"p"},"----")," alongside the expected result (error, success or the number of the tuples).   "),(0,r.kt)("p",null,"When specifying a number after the dashes, it's necessary to add the same number of tuples in the\nnext following lines.  "),(0,r.kt)("p",null,"If the subsequent lines contain additional statements to validate, they will be incorporated into the same test case\nunless a new ",(0,r.kt)("inlineCode",{parentName:"p"},"-CASE")," is written."),(0,r.kt)("h3",{id:"results"},"Results"),(0,r.kt)("p",null,"There are three ways to specify the expected result:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Result"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"---- error")),(0,r.kt)("td",{parentName:"tr",align:null},"The following lines must be the expected error message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"---- ok")),(0,r.kt)("td",{parentName:"tr",align:null},"does not require any additional information below the line.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"---- [number of expected tuples]")),(0,r.kt)("td",{parentName:"tr",align:null},"The following lines must be exactly the query results.")))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"Note:"))," By default, the expected result tuples can be written in any\norder. The framework will sort the actual ","&"," expected results before\ncomparing. If you need the results not to be sorted, you can set it by adding\n",(0,r.kt)("inlineCode",{parentName:"p"},"-CHECK_ORDER")," before the statement.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"# Expects error message \n-STATEMENT MATCH (p:person) RETURN COUNT(intended-error);\n---- error\nError: Binder exception: Variable intended is not in scope.\n\n# Success results don't need anything after the dashes\n-STATEMENT CREATE NODE TABLE  Person (ID INT64, PRIMARY KEY (ID));\n---- ok\n\n-STATEMENT MATCH (a:person) RETURN a.fName LIMIT 4\n---- 4\nAlice\nBob\nCarol\nDan\n")),(0,r.kt)("p",null,"Query results can also be stored in a file. By using ",(0,r.kt)("inlineCode",{parentName:"p"},"<FILE>:"),", the testing\nframework reads the results from the file and compare to the actual query\nresult. The file must be created inside ",(0,r.kt)("inlineCode",{parentName:"p"},"test/answers/<name-of-the-file.txt>"),". "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-STATEMENT MATCH (p0:person)-[r:knows]->(p1:person) RETURN ID(r)\n---- 5001\n<FILE>:file_with_answers.txt\n")),(0,r.kt)("h3",{id:"additional-properties"},"Additional properties"),(0,r.kt)("p",null,"It is also possible to use the additional properties inside each test case:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-LOG")),(0,r.kt)("td",{parentName:"tr",align:null},"any string"),(0,r.kt)("td",{parentName:"tr",align:null},"Define a name for each block for informational purposes")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-SKIP")),(0,r.kt)("td",{parentName:"tr",align:null},"none"),(0,r.kt)("td",{parentName:"tr",align:null},"Register the test but skip the whole test case. When a test is skipped, it will display as disabled in the test run")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-PARALLELISM")),(0,r.kt)("td",{parentName:"tr",align:null},"integer"),(0,r.kt)("td",{parentName:"tr",align:null},"Default: 4. The number of threads that will be set by ",(0,r.kt)("inlineCode",{parentName:"td"},"connection.setMaxNumThreadForExec()"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-BEGIN_WRITE_TRANSACTION")),(0,r.kt)("td",{parentName:"tr",align:null},"none"),(0,r.kt)("td",{parentName:"tr",align:null},"Call ",(0,r.kt)("inlineCode",{parentName:"td"},"connection.beginWriteTransaction()")," before the subsequent statements.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-CHECK_ORDER")),(0,r.kt)("td",{parentName:"tr",align:null},"none"),(0,r.kt)("td",{parentName:"tr",align:null},"By default, the query results and expected results are ordered before asserting comparison.")))),(0,r.kt)("h3",{id:"defining-variables"},"Defining variables"),(0,r.kt)("p",null,"A variable can be defined and re-used inside a statement, results or error\nmessage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'-DEFINE EXPECTED_RESULT "0|1:0|0"\n-CASE Backward\n-STATEMENT MATCH (p0:person)<-[r:knows]-(p1:person) WHERE p0.ID = 0 RETURN p0.ID, ID(r), p1.ID\n---- 1\n${EXPECTED_RESULT}\n\n-CASE Forward\n-STATEMENT MATCH (p0:person)-[r:knows]->(p1:person) WHERE p0.ID = 0 RETURN p0.ID, ID(r), p1.ID\n---- 1\n${EXPECTED_RESULT}\n')),(0,r.kt)("p",null,"A more practical example is using functions alongside ",(0,r.kt)("inlineCode",{parentName:"p"},"-DEFINE"),". The framework\ncurrently support the following functions: "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-DEFINE [var] ARANGE [start] [end]")),(0,r.kt)("td",{parentName:"tr",align:null},"Generate a list of numbers from start to end"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-DEFINE STRING_OVERFLOW ARANGE 0 5")," ",(0,r.kt)("br",null)," generates ",(0,r.kt)("inlineCode",{parentName:"td"},"STRING_OVERFLOW = [0,1,2,3,4,5]"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'-DEFINE [var] REPEAT [count] "[text]"')),(0,r.kt)("td",{parentName:"tr",align:null},"Repeat the text multiple times"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'-DEFINE MY_STR REPEAT 3 "MyString"'),(0,r.kt)("br",null)," generates ",(0,r.kt)("inlineCode",{parentName:"td"},'MY_STR = "MyStringMyStringMyString"'))))),(0,r.kt)("h4",{id:"pre-defined-variables"},"Pre-defined variables"),(0,r.kt)("p",null,"You can insert K\xf9zu directory path in the test result by writing\n",(0,r.kt)("inlineCode",{parentName:"p"},"${KUZU_ROOT_DIRECTORY}"),"."),(0,r.kt)("h3",{id:"defining-statement-blocks"},"Defining statement blocks"),(0,r.kt)("p",null,"A statement block can be defined and re-used along the test file.",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"-DEFINE_STATEMENT_BLOCK")," define a block that can be used by\ncalling ",(0,r.kt)("inlineCode",{parentName:"p"},"-STATEMENT_BLOCK")," in any part of the test case body. It\ncan be useful to perform checks without having to re-write the same staments\nagain."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-DEFINE_STATEMENT_BLOCK CREATE_PERSON_REL [\n-STATEMENT MATCH (a:person), (b:person) WHERE a.ID=10 AND b.ID=20 CREATE (a)-[e:knows]->(b)\n---- ok\n-STATEMENT MATCH (a:person), (b:person) WHERE a.ID=1 AND b.ID=2 CREATE (a)-[e:knows]->(b)\n---- ok\n]\n\n-CASE TestCaseA\n-STATEMENT_BLOCK CREATE_PERSON_REL\n-STATEMENT ...\n---- ok\n\n-CASE TestCaseB\n-STATEMENT_BLOCK CREATE_PERSON_REL\n-STATEMENT ...\n---- ok\n")),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Full example with comments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Header\n# We can add -SKIP here if we need to temporarily skip the whole file\n-GROUP Create\n-TEST CreateRelTest\n-BUFFER_POOL_SIZE 64000000\n-DATASET PARQUET CSV_TO_PARQUET(tinysnb)\n\n--\n\n-DEFINE_STATEMENT_BLOCK create_rel_set [\n-STATEMENT MATCH (a:person), (b:person) \n                 WHERE a.ID=10 AND b.ID=20 \n                 CREATE (a)-[e:knows]->(b);\n---- ok\n-STATEMENT MATCH (a:person), (b:person) \n                 WHERE a.ID=1 AND b.ID=2\n                 CREATE (a)-[e:knows]->(b);\n---- ok\n]\n\n-CASE TestRelationSet\n\n-LOG Current Relaaation Test\n-STATEMENT MATCH (a:person)-[e:knows]->(b:person) RETURN COUNT(*)\n---- 1\n2\n\n# This is also part of TestRelationSet test case\n-LOG Create Relation Set\n-STATEMENT_BLOCK create_rel_set\n-STATEMENT MATCH (a:person)-[e:knows]->(b:person) RETURN COUNT(*)\n---- 1\n4\n\n# This is also part of TestRelationSet test case\n-LOG Test Duplicated Primary Key\n-STATEMENT MATCH (a:person), (b:person)\n                 WHERE a.ID=1 AND b.ID=20 \n                 CREATE (a)-[e:knows]->(b);\n---- error\n"Exception: Duplicate primary key"\n\n\n# New test case. Start a new database\n-CASE OrderCheck\n\n-CHECK_ORDER\n-PARALLELISM 1\n-STATEMENT MATCH (a:person)-[:studyAt]->(b:organisation) \n             WHERE b.name = "Waterloo"\n             RETURN a.name,\n                    a.age ORDER BY a.age DESC;\n---- 2\nKarissa|40\nAdam|30\n\n# Read query results from a file to compare \n-CASE PersonOrganisationRelTest \n-STATEMENT MATCH (a:person)-[:studyAt]->(b:organisation)\nRETURN a.ID, b.ID\n---- 16\n<FILE>:person_study_at_answers.txt\n\n')),(0,r.kt)("p",null,"Example of ",(0,r.kt)("inlineCode",{parentName:"p"},"BEGIN_WRITE_TRANSACTION"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-CASE ParsingErrorRollbackTest\n\n-BEGIN_WRITE_TRANSACTION\n-STATEMENT CREATE (p:person {ID: 100})\n---- ok\n-STATEMENT MATCH (:person) RETURN count(*)\n---- 1\n9\n-STATEMENT RETURN make_date(2011,1,32)\n---- error\nDate out of range: 2011-1-32.\n-STATEMENT MATCH (:person) RETURN count(*)\n---- 1\n8\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"File"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/kuzudb/kuzu/blob/1bd26e46eac7a5de1d8776bab74988b05c4913dc/test/test_files/tinysnb/update_node/set.test#LL78C33-L78C36"},"set.test")),(0,r.kt)("td",{parentName:"tr",align:null},"ARANGE example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/kuzudb/kuzu/blob/1bd26e46eac7a5de1d8776bab74988b05c4913dc/test/test_files/copy/copy_long_string.test"},"copy_long_string.test")),(0,r.kt)("td",{parentName:"tr",align:null},"REPEAT example")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/kuzudb/kuzu/blob/1bd26e46eac7a5de1d8776bab74988b05c4913dc/test/test_files/copy/copy_multiple_files.test"},"copy_multiple_files.test")),(0,r.kt)("td",{parentName:"tr",align:null},"Using statement blocks")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://github.com/kuzudb/kuzu/blob/1bd26e46eac7a5de1d8776bab74988b05c4913dc/test/test_files/exceptions/catalog/catalog.test"},"catalog.test")),(0,r.kt)("td",{parentName:"tr",align:null},"Dealing with exceptions")))))}m.isMDXComponent=!0}}]);