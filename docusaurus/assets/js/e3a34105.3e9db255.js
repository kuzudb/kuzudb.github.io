"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[9545],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),h=r,g=c["".concat(s,".").concat(h)]||c[h]||d[h]||o;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},8474:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>p,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),o=t(475),i=t(3167),l=t(8945);const s={slug:"kuzuexplorer",authors:["chang"],tags:["release"]},u="K\xf9zuExplorer: Visualizing Query Results and Schemas",p={permalink:"/docusaurus/blog/kuzuexplorer",source:"@site/blog/2023-10-25-kuzuexplorer/index.md",title:"K\xf9zuExplorer: Visualizing Query Results and Schemas",description:"Today, we are happy to release K\xf9zuExplorer, which is K\xf9zu's browser-based frontend to",date:"2023-10-25T00:00:00.000Z",formattedDate:"October 25, 2023",tags:[{label:"release",permalink:"/docusaurus/blog/tags/release"}],readingTime:3.445,hasTruncateMarker:!0,authors:[{name:"Chang Liu",url:"https://www.linkedin.com/in/mewim/",imageURL:"https://kuzudb.com/img/blog/chang.gif",key:"chang"}],frontMatter:{slug:"kuzuexplorer",authors:["chang"],tags:["release"]},nextItem:{title:"K\xf9zu 0.0.11 Release",permalink:"/docusaurus/blog/kuzu-0.0.11-release"}},c={authorsImageUrls:[void 0]},d=[{value:"Launching K\xf9zuExplorer",id:"launching-k\xf9zuexplorer",level:2},{value:"Schema Panel: Schema Exploring and Editing",id:"schema-panel-schema-exploring-and-editing",level:2},{value:"Shell Panel: Query Result Visualization",id:"shell-panel-query-result-visualization",level:2},{value:"Settings Panel: Configuring Visualizations",id:"settings-panel-configuring-visualizations",level:2},{value:"Final Words",id:"final-words",level:2}],h={toc:d},g="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(g,(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Today, we are happy to release K\xf9zuExplorer, which is K\xf9zu's browser-based frontend to\nvisualize and explore database schemas and query results in the form of a graph, table, or in JSON.\nThis is a very useful tool for exploring databases and debugging applications during prototyping\nphase. This post describes a brief overview of the main features of K\xf9zuExplorer with pointers to\n",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer"},"K\xf9zuExplorer documentation")," for details."),(0,r.kt)("h2",{id:"launching-k\xf9zuexplorer"},"Launching K\xf9zuExplorer"),(0,r.kt)("p",null,"K\xf9zuExplorer is a web application that is launched from a deployed Docker image. Assuming you have Docker\ninstalled before proceeding, you can launch K\xf9zuExplorer on an existing DBMS you have or on an empty database.\nDetails about how to launch K\xf9zuExplorer can be found ",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer/#launching-k%C3%B9zuexplorer"},"here"),".\nFor example, to start K\xf9zuExplorer on an empty\ndatabase, you can simply run the following command on your shell, and then access K\xf9zuExplorer by going to\n",(0,r.kt)("inlineCode",{parentName:"p"},"http://localhost:8000")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"docker run -p 8000:8000 --rm kuzudb/kuzu-ui:latest\n")),(0,r.kt)("p",null,"K\xf9zuExplorer comes bundled with several pre-existing databases, one of which you can use to get started.\nTo load one of these databases, click the ",(0,r.kt)("inlineCode",{parentName:"p"},"Datasets")," tab on the top right corner on your landing page\nand then the ",(0,r.kt)("inlineCode",{parentName:"p"},"Load Dataset")," button as shown in the below figure."),(0,r.kt)("div",{class:"img-center"},(0,r.kt)("img",{src:o.Z,width:"600"})),(0,r.kt)("h2",{id:"schema-panel-schema-exploring-and-editing"},"Schema Panel: Schema Exploring and Editing"),(0,r.kt)("p",null,"One of the two main functionalities of K\xf9zuExplorer is to explore and modify the schema of your database.\nBy clicking the ",(0,r.kt)("inlineCode",{parentName:"p"},"Schema")," tab on the top right corner, you'll get to a page that shows you the\nNode and Relationship tables in your database in a node-link view on the left. Using the right panel,\nyou can do several things to explore and modify your tables, such as by adding new properties to your\nnode/rel tables, inserting new node/rel tables, or dropping node/rel tables. These changes can all be done\ninteractively by clicking buttons, which automatically generate and run the corresponding Cypher queries\n(unless you have launched K\xf9zuExplorer ",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer/#access-mode"},"in read-only mode"),")."),(0,r.kt)("div",{class:"img-center"},(0,r.kt)("img",{src:i.Z,width:"600"})),(0,r.kt)("p",null,"More details\nabout what can be done in the Schema panel can be found ",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer/schema-panel"},"here"),"."),(0,r.kt)("h2",{id:"shell-panel-query-result-visualization"},"Shell Panel: Query Result Visualization"),(0,r.kt)("p",null,"Using K\xf9zuExplorer, you can also issue Cypher queries similar to K\xf9zu's\n",(0,r.kt)("a",{parentName:"p",href:"/installation#command-line"},"command line interface"),", and\nvisualize the results of these queries.\nTo issue queries go to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Shell"),' tab on the right corner and you can type a Cypher query.\nAs you type your query, K\xf9zuExplorer shell will suggest keyword completions, which can\nhelp you write your queries. You can then click the green "play" icon on the left hand\nside of the shell panel, which will execute your queries and display the results. The\nresults can be displayed in three different modes: (i) a node-link graph view; (ii) a table; or (iii) as json.\nAs an example, the below image presents the results of the following query which retrieves all nodes and edges\nin the database in a node-link graph view:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (a)-[e]->(b)\nRETURN *\n")),(0,r.kt)("div",{class:"img-center"},(0,r.kt)("img",{src:l.Z,width:"600"})),(0,r.kt)("p",null,"You can inspect individual nodes and edge in the query results by clicking on them. More details\nabout what can be done in the Shell panel can be found ",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer/shell-panel"},"here"),"."),(0,r.kt)("h2",{id:"settings-panel-configuring-visualizations"},"Settings Panel: Configuring Visualizations"),(0,r.kt)("p",null,"There is also a Settings tab on the right hand corner, which can be used for several more advanced\nsetting changes, e.g., changing the colors or sizes of nodes of a certain type (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"User")," nodes) or\nthe maximum number of nodes to plot on the node-link graph visualizations when visualizing query results.\nDetails of these can be found ",(0,r.kt)("a",{parentName:"p",href:"/kuzuexplorer/settings-panel"},"here"),"."),(0,r.kt)("h2",{id:"final-words"},"Final Words"),(0,r.kt)("p",null,"K\xf9zuExplorer should be quite useful especially when developing your applications for exploration and debugging purposes, e.g.,\nyou can interactively debug why your queries do not return the results you expect using K\xf9zuExplorer by exploring the\nactual nodes and relationships in your database."),(0,r.kt)("p",null,"This is our first version of K\xf9zuExplorer and we will be improving it over time.\nWe hope you enjoy using K\xf9zuExplorer and help us make it better! Please send us any feature or documentation requests or\nbug reports by opening an issue in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kuzudb/explorer"},"K\xf9zuExplorer's github repo"),"!"))}m.isMDXComponent=!0},475:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/preexisting-datasets-8a7a9a3ddb979ea5e3e4bd1611c4ebdf.png"},8945:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/query-result-node-link-view-708cf57bf3620a739169dbe5c69e6b4c.png"},3167:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/schema-panel-28660c6e189bff43d75bf05de40c1f1b.png"}}]);