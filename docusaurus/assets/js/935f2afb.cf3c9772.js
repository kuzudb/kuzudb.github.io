"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction Examples","href":"/docusaurus/getting-started/introduction-examples","docId":"getting-started/introduction-examples"},{"type":"link","label":"Colab Notebooks","href":"/docusaurus/getting-started/colab-notebooks","docId":"getting-started/colab-notebooks"}],"href":"/docusaurus/getting-started/"},{"type":"category","label":"Cypher","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Date","href":"/docusaurus/cypher/data-types/date","docId":"cypher/data-types/date"},{"type":"link","label":"Interval","href":"/docusaurus/cypher/data-types/interval","docId":"cypher/data-types/interval"},{"type":"link","label":"Timestamp","href":"/docusaurus/cypher/data-types/timestamp","docId":"cypher/data-types/timestamp"},{"type":"link","label":"String","href":"/docusaurus/cypher/data-types/string","docId":"cypher/data-types/string"},{"type":"link","label":"List","href":"/docusaurus/cypher/data-types/list","docId":"cypher/data-types/list"},{"type":"link","label":"Struct","href":"/docusaurus/cypher/data-types/struct","docId":"cypher/data-types/struct"},{"type":"link","label":"Serial","href":"/docusaurus/cypher/data-types/serial","docId":"cypher/data-types/serial"},{"type":"link","label":"Null Value","href":"/docusaurus/cypher/data-types/null","docId":"cypher/data-types/null"}],"href":"/docusaurus/cypher/data-types/"},{"type":"category","label":"Functions and Expressions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregate Functions","href":"/docusaurus/cypher/expressions/aggregate-functions","docId":"cypher/expressions/aggregate-functions"},{"type":"link","label":"Case Expression","href":"/docusaurus/cypher/expressions/case-expression","docId":"cypher/expressions/case-expression"},{"type":"link","label":"Casting Functions","href":"/docusaurus/cypher/expressions/casting","docId":"cypher/expressions/casting"},{"type":"link","label":"Comparison Operators","href":"/docusaurus/cypher/expressions/comparison-operators","docId":"cypher/expressions/comparison-operators"},{"type":"link","label":"Date Functions","href":"/docusaurus/cypher/expressions/date-functions","docId":"cypher/expressions/date-functions"},{"type":"link","label":"Functions and Expressions","href":"/docusaurus/cypher/expressions/","docId":"cypher/expressions/index"},{"type":"link","label":"Interval Functions","href":"/docusaurus/cypher/expressions/interval-functions","docId":"cypher/expressions/interval-functions"},{"type":"link","label":"List Functions","href":"/docusaurus/cypher/expressions/list-functions","docId":"cypher/expressions/list-functions"},{"type":"link","label":"Logical Operators","href":"/docusaurus/cypher/expressions/logical-operators","docId":"cypher/expressions/logical-operators"},{"type":"link","label":"NULL Operators","href":"/docusaurus/cypher/expressions/null-operators","docId":"cypher/expressions/null-operators"},{"type":"link","label":"Numeric Functions","href":"/docusaurus/cypher/expressions/numeric-functions","docId":"cypher/expressions/numeric-functions"},{"type":"link","label":"Pattern Matching Functions","href":"/docusaurus/cypher/expressions/pattern-matching","docId":"cypher/expressions/pattern-matching"},{"type":"link","label":"Schema Functions","href":"/docusaurus/cypher/expressions/schema-functions","docId":"cypher/expressions/schema-functions"},{"type":"link","label":"Struct Functions","href":"/docusaurus/cypher/expressions/struct-functions","docId":"cypher/expressions/struct-functions"},{"type":"link","label":"Text Functions","href":"/docusaurus/cypher/expressions/text-functions","docId":"cypher/expressions/text-functions"},{"type":"link","label":"Timestamp Functions","href":"/docusaurus/cypher/expressions/timestamp-functions","docId":"cypher/expressions/timestamp-functions"}],"href":"/docusaurus/category/functions-and-expressions"},{"type":"link","label":"Data Definition","href":"/docusaurus/cypher/ddl","docId":"cypher/ddl"},{"type":"category","label":"Query Clauses","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Example database","href":"/docusaurus/cypher/query-clauses/example-database","docId":"cypher/query-clauses/example-database"},{"type":"link","label":"Match","href":"/docusaurus/cypher/query-clauses/match","docId":"cypher/query-clauses/match"},{"type":"link","label":"Optional Match","href":"/docusaurus/cypher/query-clauses/optional-match","docId":"cypher/query-clauses/optional-match"},{"type":"link","label":"Where","href":"/docusaurus/cypher/query-clauses/where","docId":"cypher/query-clauses/where"},{"type":"link","label":"With","href":"/docusaurus/cypher/query-clauses/with","docId":"cypher/query-clauses/with"},{"type":"link","label":"Return","href":"/docusaurus/cypher/query-clauses/return","docId":"cypher/query-clauses/return"},{"type":"link","label":"Order By","href":"/docusaurus/cypher/query-clauses/order-by","docId":"cypher/query-clauses/order-by"},{"type":"link","label":"Skip","href":"/docusaurus/cypher/query-clauses/skip","docId":"cypher/query-clauses/skip"},{"type":"link","label":"Limit","href":"/docusaurus/cypher/query-clauses/limit","docId":"cypher/query-clauses/limit"},{"type":"link","label":"Union","href":"/docusaurus/cypher/query-clauses/union","docId":"cypher/query-clauses/union"},{"type":"link","label":"Unwind","href":"/docusaurus/cypher/query-clauses/unwind","docId":"cypher/query-clauses/unwind"}],"href":"/docusaurus/category/query-clauses"},{"type":"category","label":"Data Manipulation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create","href":"/docusaurus/cypher/data-manipulation-clauses/create","docId":"cypher/data-manipulation-clauses/create"},{"type":"link","label":"Delete","href":"/docusaurus/cypher/data-manipulation-clauses/delete","docId":"cypher/data-manipulation-clauses/delete"},{"type":"link","label":"Set","href":"/docusaurus/cypher/data-manipulation-clauses/set","docId":"cypher/data-manipulation-clauses/set"}],"href":"/docusaurus/cypher/data-manipulation-clauses/"},{"type":"link","label":"Performance Debugging","href":"/docusaurus/cypher/performance-debugging","docId":"cypher/performance-debugging"}],"href":"/docusaurus/cypher/"},{"type":"category","label":"Client APIs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CLI","href":"/docusaurus/client-apis/cli","docId":"client-apis/cli"},{"type":"category","label":"Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database","href":"/docusaurus/client-apis/python-api/database","docId":"client-apis/python-api/database"},{"type":"link","label":"Connection & Querying","href":"/docusaurus/client-apis/python-api/connection","docId":"client-apis/python-api/connection"},{"type":"link","label":"Query result","href":"/docusaurus/client-apis/python-api/query-result","docId":"client-apis/python-api/query-result"}],"href":"/docusaurus/client-apis/python-api/"},{"type":"category","label":"Node.js","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Connection","href":"/docusaurus/client-apis/nodejs-api/connection","docId":"client-apis/nodejs-api/connection"},{"type":"link","label":"Database","href":"/docusaurus/client-apis/nodejs-api/database","docId":"client-apis/nodejs-api/database"},{"type":"link","label":"Prepared Statement","href":"/docusaurus/client-apis/nodejs-api/prepared-statement","docId":"client-apis/nodejs-api/prepared-statement"},{"type":"link","label":"Query Result","href":"/docusaurus/client-apis/nodejs-api/query-result","docId":"client-apis/nodejs-api/query-result"}],"href":"/docusaurus/client-apis/nodejs-api/"},{"type":"category","label":"C","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database","href":"/docusaurus/client-apis/c-api/database","docId":"client-apis/c-api/database"},{"type":"link","label":"Connection","href":"/docusaurus/client-apis/c-api/connection","docId":"client-apis/c-api/connection"},{"type":"link","label":"Query Result","href":"/docusaurus/client-apis/c-api/query_result","docId":"client-apis/c-api/query_result"},{"type":"link","label":"Tuple","href":"/docusaurus/client-apis/c-api/tuple","docId":"client-apis/c-api/tuple"},{"type":"link","label":"Value","href":"/docusaurus/client-apis/c-api/value","docId":"client-apis/c-api/value"},{"type":"link","label":"Data Type","href":"/docusaurus/client-apis/c-api/datatype","docId":"client-apis/c-api/datatype"},{"type":"link","label":"Prepared Statement","href":"/docusaurus/client-apis/c-api/prepared_statement","docId":"client-apis/c-api/prepared_statement"}],"href":"/docusaurus/client-apis/c-api/"},{"type":"category","label":"C++","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Database","href":"/docusaurus/client-apis/cpp-api/database","docId":"client-apis/cpp-api/database"},{"type":"link","label":"Connection & Querying","href":"/docusaurus/client-apis/cpp-api/connection","docId":"client-apis/cpp-api/connection"},{"type":"link","label":"QueryResult and QuerySummary","href":"/docusaurus/client-apis/cpp-api/query-result","docId":"client-apis/cpp-api/query-result"},{"type":"link","label":"PreparedStatement","href":"/docusaurus/client-apis/cpp-api/prepared-statement","docId":"client-apis/cpp-api/prepared-statement"},{"type":"link","label":"FlatTuple","href":"/docusaurus/client-apis/cpp-api/flat-tuple","docId":"client-apis/cpp-api/flat-tuple"},{"type":"link","label":"Value","href":"/docusaurus/client-apis/cpp-api/value","docId":"client-apis/cpp-api/value"}],"href":"/docusaurus/client-apis/cpp-api/"},{"type":"link","label":"Transaction","href":"/docusaurus/client-apis/transactions","docId":"client-apis/transactions"}],"href":"/docusaurus/client-apis/"},{"type":"category","label":"Data Import","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSV","href":"/docusaurus/data-import/csv-import","docId":"data-import/csv-import"},{"type":"link","label":"NPY","href":"/docusaurus/data-import/npy-import","docId":"data-import/npy-import"},{"type":"link","label":"Parquet","href":"/docusaurus/data-import/parquet-import","docId":"data-import/parquet-import"}],"href":"/docusaurus/data-import/"},{"type":"category","label":"Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Testing Framework","href":"/docusaurus/development/testing-framework","docId":"development/testing-framework"}]},{"type":"link","label":"Contributor Agreement","href":"/docusaurus/CLA","docId":"CLA"},{"type":"link","label":"CODE_OF_CONDUCT","href":"/docusaurus/CODE_OF_CONDUCT","docId":"CODE_OF_CONDUCT"},{"type":"link","label":"Contributing","href":"/docusaurus/CONTRIBUTING","docId":"CONTRIBUTING"}]},"docs":{"CLA":{"id":"CLA","title":"Contributor Agreement","description":"Thank you for your interest in contributing to Xiyang Feng\'s, Guodong Jin\'s, Chang Liu\'s, Ziyi Chen\'s, and Semih Saliho\u011flu\'s K\xf9zu (\\"We\\" or \\"Us\\").","sidebar":"tutorialSidebar"},"client-apis/c-api/connection":{"id":"client-apis/c-api/connection","title":"Connection","description":"class kuzu_connection","sidebar":"tutorialSidebar"},"client-apis/c-api/database":{"id":"client-apis/c-api/database","title":"Database","description":"class kuzu_database","sidebar":"tutorialSidebar"},"client-apis/c-api/datatype":{"id":"client-apis/c-api/datatype","title":"Data Type","description":"class kuzulogicaltype","sidebar":"tutorialSidebar"},"client-apis/c-api/index":{"id":"client-apis/c-api/index","title":"C API","description":"This module contains C API documentaion. Please see the getting started instructions for details on how to install the C API and set up your environment.","sidebar":"tutorialSidebar"},"client-apis/c-api/prepared_statement":{"id":"client-apis/c-api/prepared_statement","title":"Prepared Statement","description":"class kuzupreparedstatement","sidebar":"tutorialSidebar"},"client-apis/c-api/query_result":{"id":"client-apis/c-api/query_result","title":"Query Result","description":"class kuzuqueryresult","sidebar":"tutorialSidebar"},"client-apis/c-api/tuple":{"id":"client-apis/c-api/tuple","title":"Tuple","description":"class kuzuflattuple","sidebar":"tutorialSidebar"},"client-apis/c-api/value":{"id":"client-apis/c-api/value","title":"Value","description":"class kuzunodeval","sidebar":"tutorialSidebar"},"client-apis/cli":{"id":"client-apis/cli","title":"CLI","description":"Through CLI, you can issue Cypher queries or call shell commands.","sidebar":"tutorialSidebar"},"client-apis/cpp-api/connection":{"id":"client-apis/cpp-api/connection","title":"Connection & Querying","description":"To issue a query, you need to create a Connection using a pointer to","sidebar":"tutorialSidebar"},"client-apis/cpp-api/database":{"id":"client-apis/cpp-api/database","title":"Database","description":"To use K\xf9zu, you need to first create a Database instance.","sidebar":"tutorialSidebar"},"client-apis/cpp-api/flat-tuple":{"id":"client-apis/cpp-api/flat-tuple","title":"FlatTuple","description":"FlatTuple stores a vector of values.","sidebar":"tutorialSidebar"},"client-apis/cpp-api/index":{"id":"client-apis/cpp-api/index","title":"C++ API","description":"This module contains C++ API documentaion. Please","sidebar":"tutorialSidebar"},"client-apis/cpp-api/prepared-statement":{"id":"client-apis/cpp-api/prepared-statement","title":"PreparedStatement","description":"PreparedStatement is a parameterized query which can avoid planning the same query for repeated execution.","sidebar":"tutorialSidebar"},"client-apis/cpp-api/query-result":{"id":"client-apis/cpp-api/query-result","title":"QueryResult and QuerySummary","description":"QueryResult captures all information related to the execution of a query. Each returned tuple is wrapped into a FlatTuple where each entry is wrapped as a Value.","sidebar":"tutorialSidebar"},"client-apis/cpp-api/value":{"id":"client-apis/cpp-api/value","title":"Value","description":"Value can hold data of different types.","sidebar":"tutorialSidebar"},"client-apis/index":{"id":"client-apis/index","title":"Client APIs","description":"You can interact with K\xf9zu through its CLI or client APIs in C, C++, Python, and Node.js.","sidebar":"tutorialSidebar"},"client-apis/nodejs-api/connection":{"id":"client-apis/nodejs-api/connection","title":"Connection","description":"- Connection","sidebar":"tutorialSidebar"},"client-apis/nodejs-api/database":{"id":"client-apis/nodejs-api/database","title":"Database","description":"- Database","sidebar":"tutorialSidebar"},"client-apis/nodejs-api/index":{"id":"client-apis/nodejs-api/index","title":"Node.js API","description":"This module contains Node.js API documentaion. Please see the getting started instructions for installation and quick examples.","sidebar":"tutorialSidebar"},"client-apis/nodejs-api/prepared-statement":{"id":"client-apis/nodejs-api/prepared-statement","title":"Prepared Statement","description":"- PreparedStatement","sidebar":"tutorialSidebar"},"client-apis/nodejs-api/query-result":{"id":"client-apis/nodejs-api/query-result","title":"Query Result","description":"- QueryResult","sidebar":"tutorialSidebar"},"client-apis/python-api/connection":{"id":"client-apis/python-api/connection","title":"Connection & Querying","description":"Connection","sidebar":"tutorialSidebar"},"client-apis/python-api/database":{"id":"client-apis/python-api/database","title":"Database","description":"Database","sidebar":"tutorialSidebar"},"client-apis/python-api/index":{"id":"client-apis/python-api/index","title":"Python API","description":"This module contains Python API documentaion. Please see the getting started instructions for","sidebar":"tutorialSidebar"},"client-apis/python-api/query-result":{"id":"client-apis/python-api/query-result","title":"Query result","description":"QueryResult","sidebar":"tutorialSidebar"},"client-apis/transactions":{"id":"client-apis/transactions","title":"Transaction","description":"K\xf9zu is a transactional system. Specifically, it implements a transaction management","sidebar":"tutorialSidebar"},"CODE_OF_CONDUCT":{"id":"CODE_OF_CONDUCT","title":"CODE_OF_CONDUCT","description":"We are developing K\xf9zu in a publicly open GitHub repo and encourage everyone","sidebar":"tutorialSidebar"},"CONTRIBUTING":{"id":"CONTRIBUTING","title":"Contributing","description":"Welcome to K\xf9zu! We are excited that you are interested in contributing to K\xf9zu.","sidebar":"tutorialSidebar"},"cypher/data-manipulation-clauses/create":{"id":"cypher/data-manipulation-clauses/create","title":"Create","description":"Insert records into your node and relationship tables.","sidebar":"tutorialSidebar"},"cypher/data-manipulation-clauses/delete":{"id":"cypher/data-manipulation-clauses/delete","title":"Delete","description":"Delete node records from your tables.","sidebar":"tutorialSidebar"},"cypher/data-manipulation-clauses/index":{"id":"cypher/data-manipulation-clauses/index","title":"Data Manipulation","description":"openCypher has CREATE/SET/DELETE commands to manipulate the data in a database.","sidebar":"tutorialSidebar"},"cypher/data-manipulation-clauses/set":{"id":"cypher/data-manipulation-clauses/set","title":"Set","description":"Update properties of node or relationship records to new values.","sidebar":"tutorialSidebar"},"cypher/data-types/date":{"id":"cypher/data-types/date","title":"Date","description":"DATE is specified in ISO 8601 format (YYYY-MM-DD).","sidebar":"tutorialSidebar"},"cypher/data-types/index":{"id":"cypher/data-types/index","title":"Data Types","description":"K\xf9zu supports a set of primitive and nested data types both for node and relationship properties as well as for forming expressions whose outputs are in these data types. The table below shows all built-in data types.","sidebar":"tutorialSidebar"},"cypher/data-types/interval":{"id":"cypher/data-types/interval","title":"Interval","description":"INTERVAL consists of multiple date parts and represents the total time length of these date parts. K\xf9zu follows DuckDB\'s implementation for the format of specifying intervals.","sidebar":"tutorialSidebar"},"cypher/data-types/list":{"id":"cypher/data-types/list","title":"List","description":"K\xf9zu supports two LIST data types: variable-size list VAR-LIST and fixed-size FIXED-LIST.","sidebar":"tutorialSidebar"},"cypher/data-types/null":{"id":"cypher/data-types/null","title":"Null Value","description":"NULLs are special values to represent unknown data. Every node/relationship property or result of any expression can be NULL in addition to the non-NULL domain of values they can take. For example, boolean expression can be true/false or NULL.","sidebar":"tutorialSidebar"},"cypher/data-types/serial":{"id":"cypher/data-types/serial","title":"Serial","description":"SERIAL is a logical data type and usually used for creating an incremental sequence of unique identifier column (similar to AUTO_INCREMENT supported by some other databases).","sidebar":"tutorialSidebar"},"cypher/data-types/string":{"id":"cypher/data-types/string","title":"String","description":"STRING data type supports UTF-8 encoding.","sidebar":"tutorialSidebar"},"cypher/data-types/struct":{"id":"cypher/data-types/struct","title":"Struct","description":"A STRUCT is a dictionary of key-value pairs where keys are of type STRING. STRUCT is a fixed-size data type so values with the same STRUCT type must contain the same set of keys. User can think of a STRUCT column as a nested single column over multiple other columns.","sidebar":"tutorialSidebar"},"cypher/data-types/timestamp":{"id":"cypher/data-types/timestamp","title":"Timestamp","description":"TIMESTAMP combines date and a time (hour, minute, second, millisecond) and is formatted according to the ISO 8601 format (YYYY-MM-DD hhss.zzzzzz]),","sidebar":"tutorialSidebar"},"cypher/ddl":{"id":"cypher/ddl","title":"Data Definition","description":"As a first step to creating your database, you need to define your node and directed relationships. In the property graph model, nodes and relationships have labels. In K\xf9zu, every node or relationship can have 1 label. The node and relationships and the predefined properties on them are defined through CREATE NODE TABLE and CREATE REL TABLE commands. The choice of using the term \\"table\\" over \\"label\\" is intentional and explained below.","sidebar":"tutorialSidebar"},"cypher/expressions/aggregate-functions":{"id":"cypher/expressions/aggregate-functions","title":"Aggregate Functions","description":"Aggregate functions are used to compute a single result from a set of input values.","sidebar":"tutorialSidebar"},"cypher/expressions/case-expression":{"id":"cypher/expressions/case-expression","title":"Case Expression","description":"CASE is used for conditional expression.","sidebar":"tutorialSidebar"},"cypher/expressions/casting":{"id":"cypher/expressions/casting","title":"Casting Functions","description":"Casting functions are used to cast values from one type to another.","sidebar":"tutorialSidebar"},"cypher/expressions/comparison-operators":{"id":"cypher/expressions/comparison-operators","title":"Comparison Operators","description":"Comparison operators are used to compare two values.","sidebar":"tutorialSidebar"},"cypher/expressions/date-functions":{"id":"cypher/expressions/date-functions","title":"Date Functions","description":"Date functions are used to manipulate date values.","sidebar":"tutorialSidebar"},"cypher/expressions/index":{"id":"cypher/expressions/index","title":"Functions and Expressions","description":"Within many clauses of high-level database query languages, such as WHERE, WITH,","sidebar":"tutorialSidebar"},"cypher/expressions/interval-functions":{"id":"cypher/expressions/interval-functions","title":"Interval Functions","description":"Interval functions are used to create and manipulate intervals.","sidebar":"tutorialSidebar"},"cypher/expressions/list-functions":{"id":"cypher/expressions/list-functions","title":"List Functions","description":"List functions are used to create and manipulate lists.","sidebar":"tutorialSidebar"},"cypher/expressions/logical-operators":{"id":"cypher/expressions/logical-operators","title":"Logical Operators","description":"Logical operators are used to combine boolean values.","sidebar":"tutorialSidebar"},"cypher/expressions/null-operators":{"id":"cypher/expressions/null-operators","title":"NULL Operators","description":"NULL operators are used to compare NULL values.","sidebar":"tutorialSidebar"},"cypher/expressions/numeric-functions":{"id":"cypher/expressions/numeric-functions","title":"Numeric Functions","description":"Numeric functions are used to perform numeric operations.","sidebar":"tutorialSidebar"},"cypher/expressions/pattern-matching":{"id":"cypher/expressions/pattern-matching","title":"Pattern Matching Functions","description":"Pattern matching functions are used to match strings against regular expressions.","sidebar":"tutorialSidebar"},"cypher/expressions/schema-functions":{"id":"cypher/expressions/schema-functions","title":"Schema Functions","description":"Schema functions are used to get information about nodes and relationships.","sidebar":"tutorialSidebar"},"cypher/expressions/struct-functions":{"id":"cypher/expressions/struct-functions","title":"Struct Functions","description":"Struct functions are used to create and extract fields from structs.","sidebar":"tutorialSidebar"},"cypher/expressions/text-functions":{"id":"cypher/expressions/text-functions","title":"Text Functions","description":"Text functions are used to manipulate text.","sidebar":"tutorialSidebar"},"cypher/expressions/timestamp-functions":{"id":"cypher/expressions/timestamp-functions","title":"Timestamp Functions","description":"Timestamp functions are used to create and extract fields from timestamps.","sidebar":"tutorialSidebar"},"cypher/index":{"id":"cypher/index","title":"Cypher","description":"Cypher is a high-level query language for the property graph data model.","sidebar":"tutorialSidebar"},"cypher/performance-debugging":{"id":"cypher/performance-debugging","title":"Performance Debugging","description":"In order to see the query plans that K\xf9zu uses, you can","sidebar":"tutorialSidebar"},"cypher/query-clauses/example-database":{"id":"cypher/query-clauses/example-database","title":"Example database","description":"For the clauses we cover here, we will use the following graph database that","sidebar":"tutorialSidebar"},"cypher/query-clauses/limit":{"id":"cypher/query-clauses/limit","title":"Limit","description":"LIMIT controls the number of tuples returned from a query.","sidebar":"tutorialSidebar"},"cypher/query-clauses/match":{"id":"cypher/query-clauses/match","title":"Match","description":"MATCH is the clause where you define a graph pattern\\", i.e., a join of node or relationship records, to find in the database.","sidebar":"tutorialSidebar"},"cypher/query-clauses/optional-match":{"id":"cypher/query-clauses/optional-match","title":"Optional Match","description":"OPTIONAL MATCH is another clause where you define a pattern to find in the database.","sidebar":"tutorialSidebar"},"cypher/query-clauses/order-by":{"id":"cypher/query-clauses/order-by","title":"Order By","description":"ORDER BY is the clause where you define the order in which you want the query results to be displayed or sort a set of tuples you computed up to a point in your query.","sidebar":"tutorialSidebar"},"cypher/query-clauses/return":{"id":"cypher/query-clauses/return","title":"Return","description":"RETURN is similar to the `SELECT` clause of SQL. RETURN is where the final results of the query are specified.","sidebar":"tutorialSidebar"},"cypher/query-clauses/skip":{"id":"cypher/query-clauses/skip","title":"Skip","description":"SKIP controls the number of tuples to skip from the start of the queryResult.","sidebar":"tutorialSidebar"},"cypher/query-clauses/union":{"id":"cypher/query-clauses/union","title":"Union","description":"UNION is the clause where you combine query result A and query result B that have the same schema but were produced by different queries into a single result C by taking their union.","sidebar":"tutorialSidebar"},"cypher/query-clauses/unwind":{"id":"cypher/query-clauses/unwind","title":"Unwind","description":"UNWIND allows you to \\"unnest\\" a list L that has k elements in it, into a table T with k element.","sidebar":"tutorialSidebar"},"cypher/query-clauses/where":{"id":"cypher/query-clauses/where","title":"Where","description":"WHERE clause is where you specify predicates/constraints on a previous part of your query.","sidebar":"tutorialSidebar"},"cypher/query-clauses/with":{"id":"cypher/query-clauses/with","title":"With","description":"WITH can be used to project some expressions, and possibly compute some aggregations, from what your query has computed up to a point before starting the next part of your query.","sidebar":"tutorialSidebar"},"data-import/csv-import":{"id":"data-import/csv-import","title":"CSV","description":"You can load the initial versions of your node and rel tables from CSV files","sidebar":"tutorialSidebar"},"data-import/index":{"id":"data-import/index","title":"Data Import","description":"There are many ways to insert data into K\xf9zu. Before either of these steps, you need to first create a graph schema, i.e., the schema of your node and relationship tables. See the details of how to define a graph schema here.","sidebar":"tutorialSidebar"},"data-import/npy-import":{"id":"data-import/npy-import","title":"NPY","description":"The npy format is the standard binary file format in NumPy for persisting a single arbitrary numpy array on disk. K\xf9zu supports COPY FROM BY COLUMN statement to import a set of npy files into a node table.","sidebar":"tutorialSidebar"},"data-import/parquet-import":{"id":"data-import/parquet-import","title":"Parquet","description":"Apache Parquet is an open source, column-oriented data file format designed for efficient data storage and retrieval. We support data import from parquet files through COPY FROM command.","sidebar":"tutorialSidebar"},"development/testing-framework":{"id":"development/testing-framework","title":"Testing Framework","description":"Introduction","sidebar":"tutorialSidebar"},"getting-started/colab-notebooks":{"id":"getting-started/colab-notebooks","title":"Colab Notebooks","description":"We provided a list of colab notebooks that demonstrate how K\xf9zu can be used through Python APIs, and integrated with the Python data science ecosystem:","sidebar":"tutorialSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"Welcome to K\xf9zu!","sidebar":"tutorialSidebar"},"getting-started/introduction-examples":{"id":"getting-started/introduction-examples","title":"Introduction Examples","description":"This guide provides hand-on instructions and examples on how to set up and start working with K\xf9zu with CLI, Python, and C++ APIs. The CSV files used in this example can be found here.","sidebar":"tutorialSidebar"}}}')}}]);