"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[7915],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(n),d=a,f=c["".concat(p,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={title:"Copy",sidebar_position:12},l=void 0,i={unversionedId:"cypher/copy",id:"cypher/copy",title:"Copy",description:"COPY statement moves data between external files and database internal.",source:"@site/docs/cypher/copy.md",sourceDirName:"cypher",slug:"/cypher/copy",permalink:"/docusaurus/cypher/copy",draft:!1,tags:[],version:"current",sidebarPosition:12,frontMatter:{title:"Copy",sidebar_position:12},sidebar:"docSidebar",previous:{title:"Load From",permalink:"/docusaurus/cypher/query-clauses/load_from"},next:{title:"Subquery",permalink:"/docusaurus/cypher/subquery"}},p={},u=[{value:"Copy From",id:"copy-from",level:2},{value:"Optional <code>column_names</code> Argument",id:"optional-column_names-argument",level:4},{value:"Copy To",id:"copy-to",level:2}],s={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"COPY")," statement moves data between external files and database internal."),(0,a.kt)("h2",{id:"copy-from"},"Copy From"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"COPY FROM")," imports data from external files into tables. ",(0,a.kt)("inlineCode",{parentName:"p"},"COPY FROM")," can only be used when the tables are empty and in initial state. "),(0,a.kt)("p",null,"K\xf9zu supports ",(0,a.kt)("inlineCode",{parentName:"p"},"COPY FROM")," different file formats. Details can be found at"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docusaurus/data-import/csv-import"},"CSV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docusaurus/data-import/parquet-import"},"Parquet")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docusaurus/data-import/npy-import"},"NPY"))),(0,a.kt)("h4",{id:"optional-column_names-argument"},"Optional ",(0,a.kt)("inlineCode",{parentName:"h4"},"column_names")," Argument"),(0,a.kt)("p",null,"When loading a file F input empty table T, if ",(0,a.kt)("inlineCode",{parentName:"p"},"column_names")," is omitted, K\xf9zu assumes F contains"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"as many columns as the columns in T; and"),(0,a.kt)("li",{parentName:"ul"},"in the same order")),(0,a.kt)("p",null,"When ",(0,a.kt)("inlineCode",{parentName:"p"},"column_names")," is spcified through ",(0,a.kt)("inlineCode",{parentName:"p"},"COPY <table_name>(<column_names>) FROM ..."),", both constraints are relaxed:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"F can contain a subset of the columns in T; and"),(0,a.kt)("li",{parentName:"ul"},"in arbitrary order")),(0,a.kt)("p",null,"Consider table"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"CREATE NODE TABLE Person(age INT, name STRING, birthDay DATE, PRIMARY KEY(name));\n")),(0,a.kt)("p",null,'And CSV file "person.csv"'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"name,age\nAdam,30\nKarissa,40\n...\n")),(0,a.kt)("p",null,"Note that the columns in csv file is not aligned with columns in Person table and mising birthday column. You could load by explicitly specify the two columns in csv corrsponds to ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"age")," columns respectively as shown below. ",(0,a.kt)("inlineCode",{parentName:"p"},"birthDay")," column will be set to default NULL value. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Copy Person(name, age) FROM "person.csv" (header=true);\n')),(0,a.kt)("h2",{id:"copy-to"},"Copy To"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"COPY TO")," exports data to external files. You can export query result to external files with customized configutation."),(0,a.kt)("p",null,'The following query write all columns of User table into "user.csv" with header.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"COPY (MATCH (u:User) RETURN u.*) TO 'user.csv' (header=true);\n")),(0,a.kt)("p",null,"K\xf9zu supports ",(0,a.kt)("inlineCode",{parentName:"p"},"COPY TO")," different file formats. Details can be found at"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docusaurus/data-export/csv-export"},"CSV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docusaurus/data-export/parquet-export"},"Parquet"))))}m.isMDXComponent=!0}}]);