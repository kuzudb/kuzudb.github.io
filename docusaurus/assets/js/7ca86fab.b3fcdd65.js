"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[4816],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3045:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905)),i=n(5973);const o={title:"Create",description:"Insert records into your node and relationship tables."},s="Database",l={unversionedId:"cypher/data-manipulation-clauses/create",id:"cypher/data-manipulation-clauses/create",title:"Create",description:"Insert records into your node and relationship tables.",source:"@site/docs/cypher/data-manipulation-clauses/create.md",sourceDirName:"cypher/data-manipulation-clauses",slug:"/cypher/data-manipulation-clauses/create",permalink:"/docusaurus/cypher/data-manipulation-clauses/create",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cypher/data-manipulation-clauses/create.md",tags:[],version:"current",frontMatter:{title:"Create",description:"Insert records into your node and relationship tables."},sidebar:"tutorialSidebar",previous:{title:"Data Manipulation",permalink:"/docusaurus/cypher/data-manipulation-clauses/"},next:{title:"Delete",permalink:"/docusaurus/cypher/data-manipulation-clauses/delete"}},p={},c=[{value:"Inserting Nodes",id:"inserting-nodes",level:2},{value:"Inserting Relationships",id:"inserting-relationships",level:2},{value:"Generic Semantics",id:"generic-semantics",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"database"},"Database"),(0,r.kt)("p",null,"We will use the database, whose schema and data import commands are given ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/cypher/query-clauses/example-database"},"here"),":"),(0,r.kt)("img",{src:i.Z,style:{width:800}}),(0,r.kt)("p",null,"You can import this database by copy pasting the commands on that page. "),(0,r.kt)("h1",{id:"create"},"CREATE"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"CREATE")," is similar to the INSERT clause of SQL and lets you insert records into your\nnode and relationship tables. We describe the generic semantics of the\nCREATE clause momentarily ",(0,r.kt)("a",{parentName:"p",href:"#generic-semantics"},"below"),". We first start with some simple examples. "),(0,r.kt)("h2",{id:"inserting-nodes"},"Inserting Nodes"),(0,r.kt)("p",null,"The following query inserts a single (Alice, 35) node record into the User node table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE (u:User {name: 'Alice', age: 35})\n")),(0,r.kt)("p",null,"The properties you would like to set are specified using the\n",(0,r.kt)("inlineCode",{parentName:"p"},"{prop1 : val1, prop2 : val2, ...}")," syntax.  "),(0,r.kt)("p",null,"If you queried the database now for\na User node with name Alice, you would get the above tuple:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (a:User) \nWHERE a.name = 'Alice' \nRETURN *\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"------------------\n| a.name | a.age |\n------------------\n| Alice  | 35    |\n------------------\n")),(0,r.kt)("p",null,'Any node property which is not specified will be set to NULL.\nFor example the following query will set the age property\nthe inserted node record to NULL. Note that for node records,\nthe primary key property, in our example "name" has to be non-NULL.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE (u:User {name: 'Dimitri'})\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (a:User) \nWHERE a.name = 'Dimitri' \nRETURN *\n")),(0,r.kt)("p",null,"Output:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"-------------------\n| a.name  | a.age |\n-------------------\n| Dimitri |       |\n-------------------\n")),(0,r.kt)("h2",{id:"inserting-relationships"},"Inserting Relationships"),(0,r.kt)("p",null,"You can insert records to your relationship tables by\nfirst binding two variables ",(0,r.kt)("inlineCode",{parentName:"p"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"t"),' to nodes, and then\n"drawing" a relationship pattern between ',(0,r.kt)("inlineCode",{parentName:"p"},"s")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"t"),'.\nFor example, the following creates a Follows relationship\nfrom the User node with name "Adam" to the User node with\nname "Noura". '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (u1:User), (u2:User) WHERE u1.name = 'Adam' AND u2.name = 'Noura' \nCREATE (u1)-[:Follows {since: 2011}]->(u2)\n")),(0,r.kt)("p",null,"Similar to inserting node records, any relationship property which is not\nspecified in the query will be set to NULL."),(0,r.kt)("h2",{id:"generic-semantics"},"Generic Semantics"),(0,r.kt)("p",null,"The general semantics of ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE")," is as follows. You can specify\nan arbitrary graph pattern ",(0,r.kt)("inlineCode",{parentName:"p"},"P")," after the ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE")," clause.\nThen for each tuple ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," that was produced before the ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE")," statement,\neach node ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," and relationship ",(0,r.kt)("inlineCode",{parentName:"p"},"r")," that is not bound by ",(0,r.kt)("inlineCode",{parentName:"p"},"t")," is inserted\nas a new node and relationship. For example the following query\nadds a Follows relationship with ",(0,r.kt)("inlineCode",{parentName:"p"},"since=2022"),' from User node "Zhang"\nto every other User node (including from "Zhang" to "Zhang")\nin the database:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'MATCH (a:User), (b:User) \nWHERE a.name = "Zhang" \nCREATE (a)-[:Follows {since :  2022}]->(b)\n')),(0,r.kt)("p",null,'This is because the "a" variable matches to User node "Zhang" and the "b" variable matches to any node in the "User" table. As a result, this query creates a Follows relationship from User node "Zhang" to every other User nodes.'))}m.isMDXComponent=!0},5973:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);