"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[8481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=i(n),b=a,m=c["".concat(s,".").concat(b)]||c[b]||d[b]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=b;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[c]="string"==typeof e?e:a,l[1]=u;for(var i=2;i<o;i++)l[i]=n[i];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},5479:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>b,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),o=n(5973);const l={title:"Subquery",sidebar_position:13},u=void 0,s={unversionedId:"cypher/subquery",id:"cypher/subquery",title:"Subquery",description:"Subquery in K\xf9zu can only be a single MATCH clause optionally followed by a WHERE clause. No other clauses is allowed.",source:"@site/docs/cypher/subquery.md",sourceDirName:"cypher",slug:"/cypher/subquery",permalink:"/docusaurus/cypher/subquery",draft:!1,tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"Subquery",sidebar_position:13},sidebar:"docSidebar",previous:{title:"Copy",permalink:"/docusaurus/cypher/copy"},next:{title:"Database Configuration",permalink:"/docusaurus/cypher/configuration"}},i={},p=[{value:"Exists Subquery",id:"exists-subquery",level:2},{value:"Nested Exists Subquery",id:"nested-exists-subquery",level:3},{value:"Count Subquery",id:"count-subquery",level:2}],c={toc:p},d="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("img",{src:o.Z,style:{width:800}}),(0,a.kt)("p",null,"Subquery in K\xf9zu can only be a single ",(0,a.kt)("inlineCode",{parentName:"p"},"MATCH")," clause optionally followed by a ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clause. No other clauses is allowed."),(0,a.kt)("h2",{id:"exists-subquery"},"Exists Subquery"),(0,a.kt)("p",null,"Exists subquery checks if given pattern has at least one match in the graph."),(0,a.kt)("p",null,"The following query searches for all Users's who have at least one 3-hop Follows\npath starting from them."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (a:User)\nWHERE a.age < 100 AND EXISTS { MATCH (a)-[:Follows*3..3]->(b:User)} \nRETURN a.name, a.age;\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"------------------\n| a.name | a.age |\n------------------\n| Adam   | 30    |\n------------------\n")),(0,a.kt)("p",null,"View example in ",(0,a.kt)("a",{parentName:"p",href:"https://colab.research.google.com/drive/1NcR-xL4Rb7nprgbvk6N2dIP30oqyUucm#scrollTo=12JMqYmA3Iol"},"Colab"),"."),(0,a.kt)("h3",{id:"nested-exists-subquery"},"Nested Exists Subquery"),(0,a.kt)("p",null,"You can also form nested sub-queries, i.e., a WHERE EXISTS sub-query inside another WHERE EXISTS. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (a:User)\nWHERE a.age < 100 AND EXISTS { MATCH (a)-[:Follows*3..3]->(b:User) WHERE EXISTS {MATCH (b)-[:Follows]->(c:User)} } \nRETURN a.name, a.age;\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"------------------\n| a.name | a.age |\n------------------\n")),(0,a.kt)("p",null,'This query returns an empty result because in example database, only "Adam" has a 3-hop Follows path and the destination "b" node of that path is "Noura". However, "Noura" does not have an outgoing Follows relationship. '),(0,a.kt)("p",null,"If we instead specified that the destination b node has an incoming edge, by swapping the direction\nof the relationship in the inner ",(0,a.kt)("inlineCode",{parentName:"p"},"(b)-[:Follows]->(c:User)")," pattern to (b)<-","[:Follows]","-(c:User)",(0,a.kt)("inlineCode",{parentName:"p"},", we would get the\n"),"(Adam, 30)` tuple back because Noura has incoming Follows relationships."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (a:User)\nWHERE a.age < 100 AND EXISTS { MATCH (a)-[:Follows*3..3]->(b:User) WHERE EXISTS {MATCH (b)<-[:Follows]-(c:User)} } \nRETURN a.name, a.age;\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"------------------\n| a.name | a.age |\n------------------\n| Adam   | 30    |\n------------------\n")),(0,a.kt)("p",null,"View example in ",(0,a.kt)("a",{parentName:"p",href:"https://colab.research.google.com/drive/1NcR-xL4Rb7nprgbvk6N2dIP30oqyUucm#scrollTo=iuHDzuVu3g7A"},"Colab"),"."),(0,a.kt)("h2",{id:"count-subquery"},"Count Subquery"),(0,a.kt)("p",null,"Count subquery checks the number of matches for given pattern in the graph. The output of this counting can be bound to a variable with aliasing.\nFor example, the following query counts number of followers for each user."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (a:User) RETURN a.name, COUNT { MATCH (a)<-[:Follows]-(b:User) } AS num_follower ORDER BY num_follower;\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"")),(0,a.kt)("p",null,"A count subquery can also be used in a ",(0,a.kt)("inlineCode",{parentName:"p"},"WHERE")," clause as an expression that returns an integer value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (a:User) \nWHERE COUNT { MATCH (a)<-[:Follows]-(b:User) } = 1\nRETURN a.name;\n")))}b.isMDXComponent=!0},5973:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);