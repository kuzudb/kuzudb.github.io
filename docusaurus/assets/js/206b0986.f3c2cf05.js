"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[1593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=n(7462),a=(n(7294),n(3905)),o=n(5973);const i={title:"Set",description:"Update properties of node or relationship records to new values.",sidebar_position:2},s="Database",l={unversionedId:"cypher/data-manipulation-clauses/set",id:"cypher/data-manipulation-clauses/set",title:"Set",description:"Update properties of node or relationship records to new values.",source:"@site/docs/cypher/data-manipulation-clauses/set.md",sourceDirName:"cypher/data-manipulation-clauses",slug:"/cypher/data-manipulation-clauses/set",permalink:"/docusaurus/cypher/data-manipulation-clauses/set",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Set",description:"Update properties of node or relationship records to new values.",sidebar_position:2},sidebar:"docSidebar",previous:{title:"Create",permalink:"/docusaurus/cypher/data-manipulation-clauses/create"},next:{title:"Delete",permalink:"/docusaurus/cypher/data-manipulation-clauses/delete"}},p={},u=[{value:"Set Node Properties",id:"set-node-properties",level:2},{value:"Set Single Label Node Properties",id:"set-single-label-node-properties",level:3},{value:"Set Multi Label Node Properties",id:"set-multi-label-node-properties",level:3},{value:"Set Relationship Properties",id:"set-relationship-properties",level:2},{value:"Set Single Label Relationship Properties",id:"set-single-label-relationship-properties",level:3},{value:"Set Multi Label Relationship Properties",id:"set-multi-label-relationship-properties",level:3}],d={toc:u},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"database"},"Database"),(0,a.kt)("p",null,"We will use the database, whose schema and data import commands are given ",(0,a.kt)("a",{parentName:"p",href:"/docusaurus/cypher/query-clauses/example-database"},"here"),":"),(0,a.kt)("img",{src:o.Z,style:{width:800}}),(0,a.kt)("p",null,"You can import this database by copy pasting the commands on that page. "),(0,a.kt)("h1",{id:"set"},"SET"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"SET")," is similar to SQL's SET clause, and allows updating properties of node or relationship records to new values (possibly NULL)."),(0,a.kt)("h2",{id:"set-node-properties"},"Set Node Properties"),(0,a.kt)("h3",{id:"set-single-label-node-properties"},"Set Single Label Node Properties"),(0,a.kt)("p",null,"The following query sets the age property of the User node with name Adam to 50 (which is 30 in the original database)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (u:User) \nWHERE u.name = 'Adam' \nSET u.age = 50\nRETURN u.*;\n------------------\n| u.name | u.age |\n------------------\n| Adam   | 50    |\n------------------\n")),(0,a.kt)("p",null,"Similarly the following sets Adam's age property to NULL.\nQuery:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (u:User) \nWHERE u.name = 'Adam' \nSET u.age = NULL\nRETURN u.*;\n------------------\n| u.name | u.age |\n------------------\n| Adam   |       |\n------------------\n")),(0,a.kt)("h3",{id:"set-multi-label-node-properties"},"Set Multi Label Node Properties"),(0,a.kt)("p",null,"K\xf9zu also supports updating node properties with multi-label nodes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (u)\nSET u.population = 0\nRETURN label(u), u.name, u.population; \n-------------------------------------------------------\n| LABEL(u._ID,[User,City]) | u.name    | u.population |\n-------------------------------------------------------\n| User                     | Adam      |              |\n-------------------------------------------------------\n| User                     | Karissa   |              |\n-------------------------------------------------------\n| User                     | Zhang     |              |\n-------------------------------------------------------\n| User                     | Noura     |              |\n-------------------------------------------------------\n| City                     | Waterloo  | 0            |\n-------------------------------------------------------\n| City                     | Kitchener | 0            |\n-------------------------------------------------------\n| City                     | Guelph    | 0            |\n-------------------------------------------------------\n")),(0,a.kt)("p",null,'Note that node tabel "User" doesn\'t contain the "population" property, thus tuples belonging to "User" table are ignored (reamining as NULLs) during ',(0,a.kt)("inlineCode",{parentName:"p"},"Set")," operations."),(0,a.kt)("h2",{id:"set-relationship-properties"},"Set Relationship Properties"),(0,a.kt)("h3",{id:"set-single-label-relationship-properties"},"Set Single Label Relationship Properties"),(0,a.kt)("p",null,"The following query sets the ",(0,a.kt)("inlineCode",{parentName:"p"},"since")," property of the Follows relationship(From Adam to Karissa) to 2012 (which is 2020 in the original database)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (u0:User)-[f:Follows]->(u1:User)\nWHERE u0.name = 'Adam' AND u1.name = 'Karissa'\nSET f.since = 2012\nRETURN f;\n---------------------------------------------------------\n| f                                                     |\n---------------------------------------------------------\n| (0:0)-{_LABEL: Follows, _ID: 2:0, since: 2012}->(0:1) |\n---------------------------------------------------------\n")),(0,a.kt)("h3",{id:"set-multi-label-relationship-properties"},"Set Multi Label Relationship Properties"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH (u0)-[f]->()\nWHERE u0.name = 'Adam'\nSET f.since = 1999\nRETURN f;\n---------------------------------------------------------\n| f                                                     |\n---------------------------------------------------------\n| (0:0)-{_LABEL: Follows, _ID: 2:0, since: 1999}->(0:1) |\n---------------------------------------------------------\n| (0:0)-{_LABEL: Follows, _ID: 2:1, since: 1999}->(0:2) |\n---------------------------------------------------------\n| (0:0)-{_LABEL: LivesIn, _ID: 3:0}->(1:0)              |\n---------------------------------------------------------\n")))}m.isMDXComponent=!0},5973:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);