"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[768],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,p=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=i(n),d=a,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||p;return n?r.createElement(k,o(o({ref:t},u),{},{components:n})):r.createElement(k,o({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var p=n.length,o=new Array(p);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var i=2;i<p;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1781:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>p,metadata:()=>l,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const p={title:"Path Functions",description:"Path functions are used to manipulate path."},o="Path Functions",l={unversionedId:"cypher/expressions/path_functions",id:"cypher/expressions/path_functions",title:"Path Functions",description:"Path functions are used to manipulate path.",source:"@site/docs/cypher/expressions/path_functions.md",sourceDirName:"cypher/expressions",slug:"/cypher/expressions/path_functions",permalink:"/docusaurus/cypher/expressions/path_functions",draft:!1,tags:[],version:"current",frontMatter:{title:"Path Functions",description:"Path functions are used to manipulate path."},sidebar:"tutorialSidebar",previous:{title:"Numeric Functions",permalink:"/docusaurus/cypher/expressions/numeric-functions"},next:{title:"Pattern Matching Functions",permalink:"/docusaurus/cypher/expressions/pattern-matching"}},s={},i=[{value:"NODES",id:"nodes",level:3},{value:"RELS",id:"rels",level:3},{value:"PROPERTIES",id:"properties",level:3}],u={toc:i},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"path-functions"},"Path Functions"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NODES"),(0,a.kt)("td",{parentName:"tr",align:null},"returns all nodes from path")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"RELS"),(0,a.kt)("td",{parentName:"tr",align:null},"returns all rels from path")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PROPERTIES"),(0,a.kt)("td",{parentName:"tr",align:null},"return given property from nodes/rels")))),(0,a.kt)("h3",{id:"nodes"},"NODES"),(0,a.kt)("p",null,"Returns all nodes from path."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input Type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"PATH")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output Type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"LIST[NODE]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH p = (a:User)-[:Follows*1..2]->(:User) \nWHERE a.name = 'Adam' \nRETURN nodes(p);\n")),(0,a.kt)("p",null,"Output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"------------------------------------------------------------------------------------\n| NODES(p)                                                                         |\n------------------------------------------------------------------------------------\n| [{_ID: 0:0, _LABEL: User, name: Adam, age: 30},{_ID: 0:1, _LABEL: User, name:... |\n------------------------------------------------------------------------------------\n| [{_ID: 0:0, _LABEL: User, name: Adam, age: 30},{_ID: 0:1, _LABEL: User, name:... |\n------------------------------------------------------------------------------------\n| [{_ID: 0:0, _LABEL: User, name: Adam, age: 30},{_ID: 0:2, _LABEL: User, name:... |\n------------------------------------------------------------------------------------\n| [{_ID: 0:0, _LABEL: User, name: Adam, age: 30},{_ID: 0:2, _LABEL: User, name:... |\n------------------------------------------------------------------------------------\n")),(0,a.kt)("h3",{id:"rels"},"RELS"),(0,a.kt)("p",null,"Returns all rels from path."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input Type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"PATH")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Output Type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"LIST[REL]")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH p = (a:User)-[:Follows*1..2]->(:User) \nWHERE a.name = 'Adam' \nRETURN rels(p);\n")),(0,a.kt)("p",null,"Output"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"------------------------------------------------------------------------------------\n| RELS(p)                                                                          |\n------------------------------------------------------------------------------------\n| [(0:0)-{_LABEL: Follows, _ID: 2:0, since: 2020}->(0:1)]                          |\n------------------------------------------------------------------------------------\n| [(0:0)-{_LABEL: Follows, _ID: 2:0, since: 2020}->(0:1),(0:1)-{_LABEL: Follows... |\n------------------------------------------------------------------------------------\n| [(0:0)-{_LABEL: Follows, _ID: 2:1, since: 2020}->(0:2)]                          |\n------------------------------------------------------------------------------------\n| [(0:0)-{_LABEL: Follows, _ID: 2:1, since: 2020}->(0:2),(0:2)-{_LABEL: Follows... |\n------------------------------------------------------------------------------------\n")),(0,a.kt)("h3",{id:"properties"},"PROPERTIES"),(0,a.kt)("p",null,"Return given property from nodes/rels."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Input Type"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"LIST[NODE/REL]"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"STRING")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"MATCH p = (a:User)-[:Follows*1..2]->(:User) \nWHERE a.name = 'Adam' \nRETURN properties(nodes(p), 'name') AS name, properties(rels(p), 'since') AS since;\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"--------------------------------------\n| name                 | since       |\n--------------------------------------\n| [Adam,Karissa]       | [2020]      |\n--------------------------------------\n| [Adam,Karissa,Zhang] | [2020,2021] |\n--------------------------------------\n| [Adam,Zhang]         | [2020]      |\n--------------------------------------\n| [Adam,Zhang,Noura]   | [2020,2022] |\n--------------------------------------\n")))}m.isMDXComponent=!0}}]);