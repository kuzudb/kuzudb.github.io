"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docSidebar":[{"type":"link","label":"Installation","href":"/docusaurus/installation","docId":"installation"},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Command Line","href":"/docusaurus/getting-started/cli","docId":"getting-started/cli"},{"type":"link","label":"Python","href":"/docusaurus/getting-started/python","docId":"getting-started/python"},{"type":"link","label":"C++","href":"/docusaurus/getting-started/cpp","docId":"getting-started/cpp"},{"type":"link","label":"C","href":"/docusaurus/getting-started/c","docId":"getting-started/c"},{"type":"link","label":"Node.js","href":"/docusaurus/getting-started/nodejs","docId":"getting-started/nodejs"},{"type":"link","label":"Rust","href":"/docusaurus/getting-started/rust","docId":"getting-started/rust"},{"type":"link","label":"Java","href":"/docusaurus/getting-started/java","docId":"getting-started/java"},{"type":"link","label":"Operating System Compatibility","href":"/docusaurus/getting-started/os","docId":"getting-started/os"}],"href":"/docusaurus/getting-started/"},{"type":"category","label":"Data Import","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSV","href":"/docusaurus/data-import/csv-import","docId":"data-import/csv-import"},{"type":"link","label":"NPY","href":"/docusaurus/data-import/npy-import","docId":"data-import/npy-import"},{"type":"link","label":"Parquet","href":"/docusaurus/data-import/parquet-import","docId":"data-import/parquet-import"}],"href":"/docusaurus/data-import/"},{"type":"category","label":"Data Export","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSV","href":"/docusaurus/data-export/csv-export","docId":"data-export/csv-export"},{"type":"link","label":"PARQUET","href":"/docusaurus/data-export/parquet-export","docId":"data-export/parquet-export"}],"href":"/docusaurus/data-export/"},{"type":"category","label":"Cypher","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Data Types","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Blob","href":"/docusaurus/cypher/data-types/blob","docId":"cypher/data-types/blob"},{"type":"link","label":"Date","href":"/docusaurus/cypher/data-types/date","docId":"cypher/data-types/date"},{"type":"link","label":"Interval","href":"/docusaurus/cypher/data-types/interval","docId":"cypher/data-types/interval"},{"type":"link","label":"List","href":"/docusaurus/cypher/data-types/list","docId":"cypher/data-types/list"},{"type":"link","label":"Node","href":"/docusaurus/cypher/data-types/node","docId":"cypher/data-types/node"},{"type":"link","label":"Null Value","href":"/docusaurus/cypher/data-types/null","docId":"cypher/data-types/null"},{"type":"link","label":"Path","href":"/docusaurus/cypher/data-types/path","docId":"cypher/data-types/path"},{"type":"link","label":"Rel","href":"/docusaurus/cypher/data-types/rel","docId":"cypher/data-types/rel"},{"type":"link","label":"Serial","href":"/docusaurus/cypher/data-types/serial","docId":"cypher/data-types/serial"},{"type":"link","label":"String","href":"/docusaurus/cypher/data-types/string","docId":"cypher/data-types/string"},{"type":"link","label":"Struct","href":"/docusaurus/cypher/data-types/struct","docId":"cypher/data-types/struct"},{"type":"link","label":"Timestamp","href":"/docusaurus/cypher/data-types/timestamp","docId":"cypher/data-types/timestamp"},{"type":"link","label":"Map","href":"/docusaurus/cypher/data-types/map","docId":"cypher/data-types/map"},{"type":"link","label":"Union","href":"/docusaurus/cypher/data-types/union","docId":"cypher/data-types/union"},{"type":"link","label":"Variant","href":"/docusaurus/cypher/data-types/variant","docId":"cypher/data-types/variant"},{"type":"link","label":"UUID","href":"/docusaurus/cypher/data-types/uuid","docId":"cypher/data-types/uuid"}],"href":"/docusaurus/cypher/data-types/"},{"type":"category","label":"Functions and Expressions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Aggregate Functions","href":"/docusaurus/cypher/expressions/aggregate-functions","docId":"cypher/expressions/aggregate-functions"},{"type":"link","label":"Blob Functions","href":"/docusaurus/cypher/expressions/blob-functions","docId":"cypher/expressions/blob-functions"},{"type":"link","label":"Case Expression","href":"/docusaurus/cypher/expressions/case-expression","docId":"cypher/expressions/case-expression"},{"type":"link","label":"Casting Functions","href":"/docusaurus/cypher/expressions/casting","docId":"cypher/expressions/casting"},{"type":"link","label":"Comparison Operators","href":"/docusaurus/cypher/expressions/comparison-operators","docId":"cypher/expressions/comparison-operators"},{"type":"link","label":"Date Functions","href":"/docusaurus/cypher/expressions/date-functions","docId":"cypher/expressions/date-functions"},{"type":"link","label":"Interval Functions","href":"/docusaurus/cypher/expressions/interval-functions","docId":"cypher/expressions/interval-functions"},{"type":"link","label":"List Functions","href":"/docusaurus/cypher/expressions/list-functions","docId":"cypher/expressions/list-functions"},{"type":"link","label":"Logical Operators","href":"/docusaurus/cypher/expressions/logical-operators","docId":"cypher/expressions/logical-operators"},{"type":"link","label":"Map Functions","href":"/docusaurus/cypher/expressions/map-functions","docId":"cypher/expressions/map-functions"},{"type":"link","label":"Node/Rel Functions","href":"/docusaurus/cypher/expressions/node-rel-functions","docId":"cypher/expressions/node-rel-functions"},{"type":"link","label":"NULL Operators","href":"/docusaurus/cypher/expressions/null-operators","docId":"cypher/expressions/null-operators"},{"type":"link","label":"Numeric Functions","href":"/docusaurus/cypher/expressions/numeric-functions","docId":"cypher/expressions/numeric-functions"},{"type":"link","label":"Path Functions","href":"/docusaurus/cypher/expressions/path_functions","docId":"cypher/expressions/path_functions"},{"type":"link","label":"Pattern Matching Functions","href":"/docusaurus/cypher/expressions/pattern-matching","docId":"cypher/expressions/pattern-matching"},{"type":"link","label":"Struct Functions","href":"/docusaurus/cypher/expressions/struct-functions","docId":"cypher/expressions/struct-functions"},{"type":"link","label":"Text Functions","href":"/docusaurus/cypher/expressions/text-functions","docId":"cypher/expressions/text-functions"},{"type":"link","label":"Timestamp Functions","href":"/docusaurus/cypher/expressions/timestamp-functions","docId":"cypher/expressions/timestamp-functions"},{"type":"link","label":"Union Functions","href":"/docusaurus/cypher/expressions/union-functions","docId":"cypher/expressions/union-functions"},{"type":"link","label":"UUID Functions","href":"/docusaurus/cypher/expressions/uuid-functions","docId":"cypher/expressions/uuid-functions"}],"href":"/docusaurus/cypher/expressions/"},{"type":"category","label":"Data Definition","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create","href":"/docusaurus/cypher/data-definition/create-table","docId":"cypher/data-definition/create-table"},{"type":"link","label":"Alter","href":"/docusaurus/cypher/data-definition/alter","docId":"cypher/data-definition/alter"},{"type":"link","label":"Drop","href":"/docusaurus/cypher/data-definition/drop","docId":"cypher/data-definition/drop"}],"href":"/docusaurus/cypher/data-definition/"},{"type":"category","label":"Data Manipulation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create","href":"/docusaurus/cypher/data-manipulation-clauses/create","docId":"cypher/data-manipulation-clauses/create"},{"type":"link","label":"Set","href":"/docusaurus/cypher/data-manipulation-clauses/set","docId":"cypher/data-manipulation-clauses/set"},{"type":"link","label":"Delete","href":"/docusaurus/cypher/data-manipulation-clauses/delete","docId":"cypher/data-manipulation-clauses/delete"},{"type":"link","label":"Merge","href":"/docusaurus/cypher/data-manipulation-clauses/merge","docId":"cypher/data-manipulation-clauses/merge"},{"type":"link","label":"Read After Update","href":"/docusaurus/cypher/data-manipulation-clauses/read-after-update","docId":"cypher/data-manipulation-clauses/read-after-update"}],"href":"/docusaurus/cypher/data-manipulation-clauses/"},{"type":"category","label":"Query Clauses","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Example database","href":"/docusaurus/cypher/query-clauses/example-database","docId":"cypher/query-clauses/example-database"},{"type":"link","label":"Match","href":"/docusaurus/cypher/query-clauses/match","docId":"cypher/query-clauses/match"},{"type":"link","label":"Optional Match","href":"/docusaurus/cypher/query-clauses/optional-match","docId":"cypher/query-clauses/optional-match"},{"type":"link","label":"Where","href":"/docusaurus/cypher/query-clauses/where","docId":"cypher/query-clauses/where"},{"type":"link","label":"With","href":"/docusaurus/cypher/query-clauses/with","docId":"cypher/query-clauses/with"},{"type":"link","label":"Return","href":"/docusaurus/cypher/query-clauses/return","docId":"cypher/query-clauses/return"},{"type":"link","label":"Order By","href":"/docusaurus/cypher/query-clauses/order-by","docId":"cypher/query-clauses/order-by"},{"type":"link","label":"Skip","href":"/docusaurus/cypher/query-clauses/skip","docId":"cypher/query-clauses/skip"},{"type":"link","label":"Limit","href":"/docusaurus/cypher/query-clauses/limit","docId":"cypher/query-clauses/limit"},{"type":"link","label":"Union","href":"/docusaurus/cypher/query-clauses/union","docId":"cypher/query-clauses/union"},{"type":"link","label":"Unwind","href":"/docusaurus/cypher/query-clauses/unwind","docId":"cypher/query-clauses/unwind"},{"type":"link","label":"Call","href":"/docusaurus/cypher/query-clauses/call","docId":"cypher/query-clauses/call"}],"href":"/docusaurus/category/query-clauses"},{"type":"link","label":"Scan","href":"/docusaurus/cypher/load_from","docId":"cypher/load_from"},{"type":"link","label":"Copy","href":"/docusaurus/cypher/copy","docId":"cypher/copy"},{"type":"link","label":"Subquery","href":"/docusaurus/cypher/subquery","docId":"cypher/subquery"},{"type":"link","label":"Database Configuration","href":"/docusaurus/cypher/configuration","docId":"cypher/configuration"},{"type":"link","label":"Macro","href":"/docusaurus/cypher/macro","docId":"cypher/macro"},{"type":"link","label":"Transaction","href":"/docusaurus/cypher/transaction","docId":"cypher/transaction"}],"href":"/docusaurus/cypher/"},{"type":"category","label":"Client APIs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Command Line","href":"/docusaurus/client-apis/cli","docId":"client-apis/cli"},{"type":"link","label":"Python","href":"/docusaurus/client-apis/python","docId":"client-apis/python"},{"type":"category","label":"C++","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"UDF","href":"/docusaurus/client-apis/cpp-api/udf","docId":"client-apis/cpp-api/udf"}],"href":"/docusaurus/client-apis/cpp-api/"},{"type":"link","label":"C","href":"/docusaurus/client-apis/c","docId":"client-apis/c"},{"type":"link","label":"Node.js","href":"/docusaurus/client-apis/nodejs","docId":"client-apis/nodejs"},{"type":"link","label":"Rust","href":"/docusaurus/client-apis/rust","docId":"client-apis/rust"},{"type":"link","label":"Java","href":"/docusaurus/client-apis/java","docId":"client-apis/java"},{"type":"category","label":"Other APIs Contributed Externally","collapsible":true,"collapsed":true,"items":[{"type":"link","label":".NET","href":"/docusaurus/client-apis/external/NET","docId":"client-apis/external/NET"}]}],"href":"/docusaurus/client-apis/"},{"type":"category","label":"RDF Graphs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RDF Basics","href":"/docusaurus/rdf-graphs/rdf-basics","docId":"rdf-graphs/rdf-basics"},{"type":"link","label":"Example RDFGraph","href":"/docusaurus/rdf-graphs/example-rdfgraph","docId":"rdf-graphs/example-rdfgraph"},{"type":"link","label":"RDFGraphs Overview & Cypher Clauses","href":"/docusaurus/rdf-graphs/rdfgraphs-overview","docId":"rdf-graphs/rdfgraphs-overview"},{"type":"link","label":"RDF Data Import","href":"/docusaurus/rdf-graphs/rdf-import","docId":"rdf-graphs/rdf-import"}],"href":"/docusaurus/rdf-graphs/"},{"type":"category","label":"K\xf9zuExplorer","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Shell Panel","href":"/docusaurus/kuzuexplorer/shell-panel","docId":"kuzuexplorer/shell-panel"},{"type":"link","label":"Schema Panel","href":"/docusaurus/kuzuexplorer/schema-panel","docId":"kuzuexplorer/schema-panel"},{"type":"link","label":"Settings Panel","href":"/docusaurus/kuzuexplorer/settings-panel","docId":"kuzuexplorer/settings-panel"}],"href":"/docusaurus/kuzuexplorer/"},{"type":"category","label":"Development","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Build K\xf9zu from Source","href":"/docusaurus/development/building-kuzu","docId":"development/building-kuzu"},{"type":"link","label":"Testing Framework","href":"/docusaurus/development/testing-framework","docId":"development/testing-framework"},{"type":"link","label":"Performance Debugging","href":"/docusaurus/development/performance-debugging","docId":"development/performance-debugging"},{"type":"category","label":"Database Internal","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DataType","href":"/docusaurus/development/database-internal/datatype","docId":"development/database-internal/datatype"},{"type":"link","label":"Vector","href":"/docusaurus/development/database-internal/vector","docId":"development/database-internal/vector"},{"type":"link","label":"Execution","href":"/docusaurus/development/database-internal/execution","docId":"development/database-internal/execution"}],"href":"/docusaurus/development/database-internal/"}]},{"type":"category","label":"Extensions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"httpfs","href":"/docusaurus/extensions/httpfs","docId":"extensions/httpfs"}],"href":"/docusaurus/extensions/"},{"type":"link","label":"Contributor Agreement","href":"/docusaurus/CLA","docId":"CLA"}]},"docs":{"CLA":{"id":"CLA","title":"Contributor Agreement","description":"Thank you for your interest in contributing to Xiyang Feng\'s, Guodong Jin\'s, Chang Liu\'s, Ziyi Chen\'s, and Semih Saliho\u011flu\'s K\xf9zu (\\"We\\" or \\"Us\\").","sidebar":"docSidebar"},"client-apis/c":{"id":"client-apis/c","title":"C","description":"","sidebar":"docSidebar"},"client-apis/cli":{"id":"client-apis/cli","title":"Command Line","description":"Through the CLI, you can issue Cypher queries or call shell commands.","sidebar":"docSidebar"},"client-apis/cpp-api/index":{"id":"client-apis/cpp-api/index","title":"C++ API","description":"Detailed C++ API documentation can be found here.","sidebar":"docSidebar"},"client-apis/cpp-api/udf":{"id":"client-apis/cpp-api/udf","title":"UDF","description":"K\xf9zu provides users with two interfaces that enable them to define their own custom scalar and vectorized functions.","sidebar":"docSidebar"},"client-apis/external/NET":{"id":"client-apis/external/NET","title":".NET","description":"","sidebar":"docSidebar"},"client-apis/index":{"id":"client-apis/index","title":"Client APIs","description":"You can interact with K\xf9zu through the CLI and client APIs in C, C++, Python, Node.js, Rust, and Java.","sidebar":"docSidebar"},"client-apis/java":{"id":"client-apis/java","title":"Java","description":"","sidebar":"docSidebar"},"client-apis/nodejs":{"id":"client-apis/nodejs","title":"Node.js","description":"Detailed Node.js API documentation can be found here.","sidebar":"docSidebar"},"client-apis/python":{"id":"client-apis/python","title":"Python","description":"Detailed Python API documentation can be found here.","sidebar":"docSidebar"},"client-apis/rust":{"id":"client-apis/rust","title":"Rust","description":"","sidebar":"docSidebar"},"cypher/configuration":{"id":"cypher/configuration","title":"Database Configuration","description":"The configuration of K\xf9zu can be changed through standalone Call statement. Different from the Call clause, this statement of changing configuration cannot be used with other query clauses.","sidebar":"docSidebar"},"cypher/copy":{"id":"cypher/copy","title":"Copy","description":"COPY statement moves data between external files and database internal.","sidebar":"docSidebar"},"cypher/data-definition/alter":{"id":"cypher/data-definition/alter","title":"Alter","description":"Alter","sidebar":"docSidebar"},"cypher/data-definition/create-table":{"id":"cypher/data-definition/create-table","title":"Create","description":"Create tables","sidebar":"docSidebar"},"cypher/data-definition/drop":{"id":"cypher/data-definition/drop","title":"Drop","description":"Drop","sidebar":"docSidebar"},"cypher/data-definition/index":{"id":"cypher/data-definition/index","title":"Data Definition","description":"","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/create":{"id":"cypher/data-manipulation-clauses/create","title":"Create","description":"Insert records into your node and relationship tables.","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/delete":{"id":"cypher/data-manipulation-clauses/delete","title":"Delete","description":"Delete node records from your tables.","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/index":{"id":"cypher/data-manipulation-clauses/index","title":"Data Manipulation","description":"openCypher has CREATE/SET/DELETE commands to manipulate the data in a database.","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/merge":{"id":"cypher/data-manipulation-clauses/merge","title":"Merge","description":"Match existing pattern or, if not present, create the pattern.","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/read-after-update":{"id":"cypher/data-manipulation-clauses/read-after-update","title":"Read After Update","description":"Return Modified Records","sidebar":"docSidebar"},"cypher/data-manipulation-clauses/set":{"id":"cypher/data-manipulation-clauses/set","title":"Set","description":"Update properties of node or relationship records to new values.","sidebar":"docSidebar"},"cypher/data-types/blob":{"id":"cypher/data-types/blob","title":"Blob","description":"BLOB(Binary Large OBject) allows user to store an arbitrary binary object with up to 4KB in size in K\xf9zu.The database process binary data as it is without knowing what the actual data (e.g. image, video) it represents.","sidebar":"docSidebar"},"cypher/data-types/date":{"id":"cypher/data-types/date","title":"Date","description":"DATE is specified in ISO 8601 format (YYYY-MM-DD).","sidebar":"docSidebar"},"cypher/data-types/index":{"id":"cypher/data-types/index","title":"Data Types","description":"K\xf9zu supports a set of primitive and nested data types both for node and relationship properties as well as for forming expressions whose outputs are in these data types. The table below shows all built-in data types.","sidebar":"docSidebar"},"cypher/data-types/interval":{"id":"cypher/data-types/interval","title":"Interval","description":"INTERVAL consists of multiple date parts and represents the total time length of these date parts. K\xf9zu follows DuckDB\'s implementation for the format of specifying intervals.","sidebar":"docSidebar"},"cypher/data-types/list":{"id":"cypher/data-types/list","title":"List","description":"K\xf9zu supports two LIST data types: variable-size list VAR-LIST and fixed-size FIXED-LIST.","sidebar":"docSidebar"},"cypher/data-types/map":{"id":"cypher/data-types/map","title":"Map","description":"A MAP is a dictionary of key-value pairs where all keys have the same type and all values have the same type. Different from STRUCT, MAP doesn\'t require the same key to present in each row. Therefore, MAP is more suitable when the schema is not determined.","sidebar":"docSidebar"},"cypher/data-types/node":{"id":"cypher/data-types/node","title":"Node","description":"NODE is a logical type. Internally, NODE is processed as STRUCT type. A NODE always contains an internal ID field with key ID and a label field with key LABEL. The rest fields are node properties.","sidebar":"docSidebar"},"cypher/data-types/null":{"id":"cypher/data-types/null","title":"Null Value","description":"NULLs are special values to represent unknown data. Every node/relationship property or result of any expression can be NULL in addition to the non-NULL domain of values they can take. For example, boolean expression can be true/false or NULL.","sidebar":"docSidebar"},"cypher/data-types/path":{"id":"cypher/data-types/path","title":"Path","description":"PATH is a logical type. Internally, PATH is processed as STRUCT type, more specifically, a STRUCT{LIST[NODE], LIST[REL]}. A PATH always contains a nodes field with key NODES and a rels field with key RELS.","sidebar":"docSidebar"},"cypher/data-types/rel":{"id":"cypher/data-types/rel","title":"Rel","description":"REL is a logical type. Internally, REL is processed as STRUCT type. A REL always contains a src ID field with key SRC, a dst ID field with key DST, an internal ID field with key ID and a label field with key LABEL. The rest fields are rel properties.","sidebar":"docSidebar"},"cypher/data-types/serial":{"id":"cypher/data-types/serial","title":"Serial","description":"SERIAL is a logical data type and usually used for creating an incremental sequence of unique identifier column (similar to AUTO_INCREMENT supported by some other databases).","sidebar":"docSidebar"},"cypher/data-types/string":{"id":"cypher/data-types/string","title":"String","description":"STRING data type supports UTF-8 encoding.","sidebar":"docSidebar"},"cypher/data-types/struct":{"id":"cypher/data-types/struct","title":"Struct","description":"A STRUCT is a dictionary of key-value pairs where keys are of type STRING. STRUCT is a fixed-size data type so values with the same STRUCT type must contain the same set of keys. User can think of a STRUCT column as a nested single column over multiple other columns.","sidebar":"docSidebar"},"cypher/data-types/timestamp":{"id":"cypher/data-types/timestamp","title":"Timestamp","description":"TIMESTAMP combines date and a time (hour, minute, second, millisecond) and is formatted according to the ISO 8601 format (YYYY-MM-DD hhss.zzzzzz]),","sidebar":"docSidebar"},"cypher/data-types/union":{"id":"cypher/data-types/union","title":"Union","description":"Similar to C++ std::variant, UNION is a nested data type that is capable of holding multiple alternative values with different types. The value under key \\"tag\\" is considered as the value being currently hold by the UNION.","sidebar":"docSidebar"},"cypher/data-types/uuid":{"id":"cypher/data-types/uuid","title":"UUID","description":"The data type UUID stores Universally Unique Identifiers (UUID) as defined by RFC 4122, ISO/IEC 9834-8:2005, and related standards. Kuzu follows the PostgreSQL\'s implementation for the format of specifying UUID.","sidebar":"docSidebar"},"cypher/data-types/variant":{"id":"cypher/data-types/variant","title":"Variant","description":"Variant is a data type that can store values of various data types (similar to the sql_variant data type of SQLServer).","sidebar":"docSidebar"},"cypher/expressions/aggregate-functions":{"id":"cypher/expressions/aggregate-functions","title":"Aggregate Functions","description":"Aggregate functions are used to compute a single result from a set of input values.","sidebar":"docSidebar"},"cypher/expressions/blob-functions":{"id":"cypher/expressions/blob-functions","title":"Blob Functions","description":"Blob functions are used to create and manipulate Blob.","sidebar":"docSidebar"},"cypher/expressions/case-expression":{"id":"cypher/expressions/case-expression","title":"Case Expression","description":"CASE is used for conditional expression.","sidebar":"docSidebar"},"cypher/expressions/casting":{"id":"cypher/expressions/casting","title":"Casting Functions","description":"Casting functions are used to cast values from one type to another.","sidebar":"docSidebar"},"cypher/expressions/comparison-operators":{"id":"cypher/expressions/comparison-operators","title":"Comparison Operators","description":"Comparison operators are used to compare two values.","sidebar":"docSidebar"},"cypher/expressions/date-functions":{"id":"cypher/expressions/date-functions","title":"Date Functions","description":"Date functions are used to manipulate date values.","sidebar":"docSidebar"},"cypher/expressions/index":{"id":"cypher/expressions/index","title":"Functions and Expressions","description":"Within many clauses of high-level database query languages, such as WHERE, WITH,","sidebar":"docSidebar"},"cypher/expressions/interval-functions":{"id":"cypher/expressions/interval-functions","title":"Interval Functions","description":"Interval functions are used to create and manipulate intervals.","sidebar":"docSidebar"},"cypher/expressions/list-functions":{"id":"cypher/expressions/list-functions","title":"List Functions","description":"List functions are used to create and manipulate lists.","sidebar":"docSidebar"},"cypher/expressions/logical-operators":{"id":"cypher/expressions/logical-operators","title":"Logical Operators","description":"Logical operators are used to combine boolean values.","sidebar":"docSidebar"},"cypher/expressions/map-functions":{"id":"cypher/expressions/map-functions","title":"Map Functions","description":"Map functions are used to create and manipulate maps.","sidebar":"docSidebar"},"cypher/expressions/node-rel-functions":{"id":"cypher/expressions/node-rel-functions","title":"Node/Rel Functions","description":"Node/Rel functions are used to get information about nodes and relationships.","sidebar":"docSidebar"},"cypher/expressions/null-operators":{"id":"cypher/expressions/null-operators","title":"NULL Operators","description":"NULL operators are used to compare NULL values.","sidebar":"docSidebar"},"cypher/expressions/numeric-functions":{"id":"cypher/expressions/numeric-functions","title":"Numeric Functions","description":"Numeric functions are used to perform numeric operations.","sidebar":"docSidebar"},"cypher/expressions/path_functions":{"id":"cypher/expressions/path_functions","title":"Path Functions","description":"Path functions are used to manipulate path.","sidebar":"docSidebar"},"cypher/expressions/pattern-matching":{"id":"cypher/expressions/pattern-matching","title":"Pattern Matching Functions","description":"Pattern matching functions are used to match strings against regular expressions.","sidebar":"docSidebar"},"cypher/expressions/struct-functions":{"id":"cypher/expressions/struct-functions","title":"Struct Functions","description":"Struct functions are used to create and extract fields from structs.","sidebar":"docSidebar"},"cypher/expressions/text-functions":{"id":"cypher/expressions/text-functions","title":"Text Functions","description":"Text functions are used to manipulate text.","sidebar":"docSidebar"},"cypher/expressions/timestamp-functions":{"id":"cypher/expressions/timestamp-functions","title":"Timestamp Functions","description":"Timestamp functions are used to create and extract fields from timestamps.","sidebar":"docSidebar"},"cypher/expressions/union-functions":{"id":"cypher/expressions/union-functions","title":"Union Functions","description":"Union functions are used to create and extract union.","sidebar":"docSidebar"},"cypher/expressions/uuid-functions":{"id":"cypher/expressions/uuid-functions","title":"UUID Functions","description":"UUID functions are used to create UUID.","sidebar":"docSidebar"},"cypher/index":{"id":"cypher/index","title":"Cypher","description":"Cypher is a high-level query language for the property graph data model.","sidebar":"docSidebar"},"cypher/load_from":{"id":"cypher/load_from","title":"Scan","description":"Direct scan over file","sidebar":"docSidebar"},"cypher/macro":{"id":"cypher/macro","title":"Macro","description":"K\xf9zu allows user to create a macro in catalog using the create macro statement. The process of creating macros involves using the CREATE MACRO keyword followed by the macro\'s name. Users can optionally include parameters with optional default value within parentheses after the name. The \\"AS\\" keyword comes next, followed by the actual cypher expression of the macro. It\'s important to note that a scalar macro is limited to returning only a single value.","sidebar":"docSidebar"},"cypher/query-clauses/call":{"id":"cypher/query-clauses/call","title":"Call","description":"CALL clause is a reading clause used for executing schema functions.","sidebar":"docSidebar"},"cypher/query-clauses/example-database":{"id":"cypher/query-clauses/example-database","title":"Example database","description":"For the clauses we cover here, we will use the following graph database that","sidebar":"docSidebar"},"cypher/query-clauses/limit":{"id":"cypher/query-clauses/limit","title":"Limit","description":"LIMIT controls the number of tuples returned from a query.","sidebar":"docSidebar"},"cypher/query-clauses/match":{"id":"cypher/query-clauses/match","title":"Match","description":"MATCH is the clause where you define a graph pattern\\", i.e., a join of node or relationship records, to find in the database.","sidebar":"docSidebar"},"cypher/query-clauses/optional-match":{"id":"cypher/query-clauses/optional-match","title":"Optional Match","description":"OPTIONAL MATCH is another clause where you define a pattern to find in the database.","sidebar":"docSidebar"},"cypher/query-clauses/order-by":{"id":"cypher/query-clauses/order-by","title":"Order By","description":"ORDER BY is the clause where you define the order in which you want the query results to be displayed or sort a set of tuples you computed up to a point in your query.","sidebar":"docSidebar"},"cypher/query-clauses/return":{"id":"cypher/query-clauses/return","title":"Return","description":"RETURN is similar to the `SELECT` clause of SQL. RETURN is where the final results of the query are specified.","sidebar":"docSidebar"},"cypher/query-clauses/skip":{"id":"cypher/query-clauses/skip","title":"Skip","description":"SKIP controls the number of tuples to skip from the start of the queryResult.","sidebar":"docSidebar"},"cypher/query-clauses/union":{"id":"cypher/query-clauses/union","title":"Union","description":"UNION is the clause where you combine query result A and query result B that have the same schema but were produced by different queries into a single result C by taking their union.","sidebar":"docSidebar"},"cypher/query-clauses/unwind":{"id":"cypher/query-clauses/unwind","title":"Unwind","description":"UNWIND allows you to \\"unnest\\" a list L that has k elements in it, into a table T with k element.","sidebar":"docSidebar"},"cypher/query-clauses/where":{"id":"cypher/query-clauses/where","title":"Where","description":"WHERE clause is where you specify predicates/constraints on a previous part of your query.","sidebar":"docSidebar"},"cypher/query-clauses/with":{"id":"cypher/query-clauses/with","title":"With","description":"WITH can be used to project some expressions, and possibly compute some aggregations, from what your query has computed up to a point before starting the next part of your query.","sidebar":"docSidebar"},"cypher/subquery":{"id":"cypher/subquery","title":"Subquery","description":"Subquery in K\xf9zu can only be a single MATCH clause optionally followed by a WHERE clause. No other clauses is allowed.","sidebar":"docSidebar"},"cypher/transaction":{"id":"cypher/transaction","title":"Transaction","description":"K\xf9zu is a transactional system, in that it implements a transaction management subsystem that is atomic, durable and supports serializability. Satisfying these properties makes K\xf9zu ACID-compliant, as per database terminology.","sidebar":"docSidebar"},"data-export/csv-export":{"id":"data-export/csv-export","title":"CSV","description":"COPY TO clause can export query result into a CSV file.","sidebar":"docSidebar"},"data-export/index":{"id":"data-export/index","title":"Data Export","description":"The COPY TO command allows you to export query results directly to a CSV file.","sidebar":"docSidebar"},"data-export/parquet-export":{"id":"data-export/parquet-export","title":"PARQUET","description":"COPY TO clause can export query results into a Parquet file.","sidebar":"docSidebar"},"data-import/csv-import":{"id":"data-import/csv-import","title":"CSV","description":"You can load the initial versions of your node and rel tables from CSV files","sidebar":"docSidebar"},"data-import/index":{"id":"data-import/index","title":"Data Import","description":"There are many ways to insert data into K\xf9zu. Before either of these steps, you need to first create a graph schema, i.e., the schema of your node and relationship tables. See the details of how to define a graph schema here.","sidebar":"docSidebar"},"data-import/npy-import":{"id":"data-import/npy-import","title":"NPY","description":"The npy format is the standard binary file format in NumPy for persisting a single arbitrary numpy array on disk. K\xf9zu supports COPY FROM BY COLUMN statement to import a set of npy files into a node table.","sidebar":"docSidebar"},"data-import/parquet-import":{"id":"data-import/parquet-import","title":"Parquet","description":"Apache Parquet is an open source, column-oriented data file format designed for efficient data storage and retrieval. We support data import from parquet files through COPY FROM command.","sidebar":"docSidebar"},"development/building-kuzu":{"id":"development/building-kuzu","title":"Build K\xf9zu from Source","description":"Note: This documentation is intended for developers who want to build K\xf9zu from source code. If you are a user who wants to use K\xf9zu, please refer to the installation section for downloading pre-built binaries for your platform.","sidebar":"docSidebar"},"development/database-internal/datatype":{"id":"development/database-internal/datatype","title":"DataType","description":"There are two data type classes in K\xf9zu, LogicalType and PhysicalType.","sidebar":"docSidebar"},"development/database-internal/execution":{"id":"development/database-internal/execution","title":"Execution","description":"Pipeline","sidebar":"docSidebar"},"development/database-internal/index":{"id":"development/database-internal/index","title":"Database Internal","description":"Database Modules","sidebar":"docSidebar"},"development/database-internal/vector":{"id":"development/database-internal/vector","title":"Vector","description":"ValueVector","sidebar":"docSidebar"},"development/performance-debugging":{"id":"development/performance-debugging","title":"Performance Debugging","description":"In order to see the query plans that K\xf9zu uses, you can","sidebar":"docSidebar"},"development/testing-framework":{"id":"development/testing-framework","title":"Testing Framework","description":"Introduction","sidebar":"docSidebar"},"extensions/httpfs":{"id":"extensions/httpfs","title":"httpfs","description":"The httpfs extension extends K\xf9zu file system by allowing reading from/writing to files hosted on","sidebar":"docSidebar"},"extensions/index":{"id":"extensions/index","title":"Overview","description":"K\xf9zu has an extension framework designed to extend K\xf9zu\'s capabilities. Currently our only extension","sidebar":"docSidebar"},"getting-started/c":{"id":"getting-started/c","title":"C","description":"Detailed C API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"getting-started/cli":{"id":"getting-started/cli","title":"Command Line","description":"Downloading","sidebar":"docSidebar"},"getting-started/cpp":{"id":"getting-started/cpp","title":"C++","description":"Detailed C++ API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"getting-started/index":{"id":"getting-started/index","title":"Getting Started","description":"Welcome to K\xf9zu!","sidebar":"docSidebar"},"getting-started/java":{"id":"getting-started/java","title":"Java","description":"Detailed Java API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"getting-started/nodejs":{"id":"getting-started/nodejs","title":"Node.js","description":"Detailed Node.js API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"getting-started/os":{"id":"getting-started/os","title":"Operating System Compatibility","description":"CLI, C and C++","sidebar":"docSidebar"},"getting-started/python":{"id":"getting-started/python","title":"Python","description":"Detailed Python API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"getting-started/rust":{"id":"getting-started/rust","title":"Rust","description":"Detailed Rust API documentation can be found here. This page is a brief guide","sidebar":"docSidebar"},"installation":{"id":"installation","title":"Installation","description":"Command Line","sidebar":"docSidebar"},"kuzuexplorer/index":{"id":"kuzuexplorer/index","title":"K\xf9zuExplorer","description":"Overview","sidebar":"docSidebar"},"kuzuexplorer/schema-panel":{"id":"kuzuexplorer/schema-panel","title":"Schema Panel","description":"If you click on the Schema tab on the top right corner of K\xf9zuExplorer, you get to the Schema Panel,","sidebar":"docSidebar"},"kuzuexplorer/settings-panel":{"id":"kuzuexplorer/settings-panel","title":"Settings Panel","description":"The Settings Panel, which you can go to by clicking Settings on the top right corner,","sidebar":"docSidebar"},"kuzuexplorer/shell-panel":{"id":"kuzuexplorer/shell-panel","title":"Shell Panel","description":"Using the Shell Panel, you can interactively issue queries to your loaded database","sidebar":"docSidebar"},"rdf-graphs/example-rdfgraph":{"id":"rdf-graphs/example-rdfgraph","title":"Example RDFGraph","description":"Throughout the documentation on K\xf9zu\'s RDFGraph feature, we will use the following","sidebar":"docSidebar"},"rdf-graphs/index":{"id":"rdf-graphs/index","title":"Motivation for RDF Graphs","description":"Resource Description Framework (RDF) along with property graphs","sidebar":"docSidebar"},"rdf-graphs/rdf-basics":{"id":"rdf-graphs/rdf-basics","title":"RDF Basics","description":"RDF is part of a set of semantic web standards by W3C consortium,","sidebar":"docSidebar"},"rdf-graphs/rdf-import":{"id":"rdf-graphs/rdf-import","title":"RDF Data Import","description":"K\xf9zu currently supports bulk importing triples into RDFGraphs through RDF Turtle (ttl)","sidebar":"docSidebar"},"rdf-graphs/rdfgraphs-overview":{"id":"rdf-graphs/rdfgraphs-overview","title":"RDFGraphs Overview & Cypher Clauses","description":"The examples on this page use the below database, whose schema and data import commands are given here:","sidebar":"docSidebar"}}}')}}]);