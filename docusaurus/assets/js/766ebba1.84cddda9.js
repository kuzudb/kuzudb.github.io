"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[1881],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(t),m=l,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||r;return t?a.createElement(h,o(o({ref:n},d),{},{components:t})):a.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=t(7462),l=(t(7294),t(3905));t(5973);const r={title:"Delete",description:"Delete node records from your tables.",sidebar_position:3},o="DELETE",i={unversionedId:"cypher/data-manipulation-clauses/delete",id:"cypher/data-manipulation-clauses/delete",title:"Delete",description:"Delete node records from your tables.",source:"@site/docs/cypher/data-manipulation-clauses/delete.md",sourceDirName:"cypher/data-manipulation-clauses",slug:"/cypher/data-manipulation-clauses/delete",permalink:"/docusaurus/cypher/data-manipulation-clauses/delete",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Delete",description:"Delete node records from your tables.",sidebar_position:3},sidebar:"docSidebar",previous:{title:"Set",permalink:"/docusaurus/cypher/data-manipulation-clauses/set"},next:{title:"Merge",permalink:"/docusaurus/cypher/data-manipulation-clauses/merge"}},s={},u=[{value:"Delete Nodes",id:"delete-nodes",level:2},{value:"Delete Single Label Nodes",id:"delete-single-label-nodes",level:3},{value:"Delete Multi Label Nodes",id:"delete-multi-label-nodes",level:3},{value:"Detach Delete",id:"detach-delete",level:2},{value:"Delete Relationships",id:"delete-relationships",level:2},{value:"Delete Single Label Relationships",id:"delete-single-label-relationships",level:3},{value:"Delete Multi Label Relationships",id:"delete-multi-label-relationships",level:3}],d={toc:u},p="wrapper";function c(e){let{components:n,...t}=e;return(0,l.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"delete"},"DELETE"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DELETE")," clause deletes node or relationship records from the table."),(0,l.kt)("p",null,"We will use the example database for demonstration, whose schema and data import commands are given ",(0,l.kt)("a",{parentName:"p",href:"/docusaurus/cypher/query-clauses/example-database"},"here"),"."),(0,l.kt)("h2",{id:"delete-nodes"},"Delete Nodes"),(0,l.kt)("h3",{id:"delete-single-label-nodes"},"Delete Single Label Nodes"),(0,l.kt)("p",null,"The following statements first create a User (Alice, 35) node record, without inserting any relationships to that node record, and then deletes the record"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"CREATE (u:User {name: 'Alice', age: 35});\nMATCH (u:User) WHERE u.name = 'Alice' DELETE u RETURN u.*;\n------------------\n| u.name | u.age |\n------------------\n| Alice  | 35    |\n------------------\n")),(0,l.kt)("h3",{id:"delete-multi-label-nodes"},"Delete Multi Label Nodes"),(0,l.kt)("p",null,'The following statements first create a user node and a city node both with name "A" and then delete them. '),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"CREATE (:User {name: 'A'}), (:City {name: 'A'});\nMATCH (u) WHERE u.name = 'A' DELETE u RETURN u.*;\n-------------------------------------\n| u                                 |\n-------------------------------------\n| {_ID: 1:3, _LABEL: City, name: A} |\n-------------------------------------\n| {_ID: 0:4, _LABEL: User, name: A} |\n-------------------------------------\n")),(0,l.kt)("h2",{id:"detach-delete"},"Detach Delete"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"DELETE")," can only delete nodes that do not have any relationships. To delete a node and all of its relationships with\na single clause, use ",(0,l.kt)("inlineCode",{parentName:"p"},"DETACH DELETE"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"MATCH ()-[e]->() RETURN COUNT(e) AS num_rels;\n------------\n| num_rels |\n------------\n| 8        |\n------------\nMATCH (u:User) WHERE u.name = 'Adam' DETACH DELETE u;\nMATCH ()-[]->() RETURN COUNT(*) AS num_rels;\n------------\n| num_rels |\n------------\n| 5        |\n------------\n")),(0,l.kt)("p",null,"For example, to delete every record in the database, you can do the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"MATCH (n) DETACH DELETE n;\n")),(0,l.kt)("h2",{id:"delete-relationships"},"Delete Relationships"),(0,l.kt)("h3",{id:"delete-single-label-relationships"},"Delete Single Label Relationships"),(0,l.kt)("p",null,"The following query deletes the ",(0,l.kt)("inlineCode",{parentName:"p"},"Follows")," relationship between ",(0,l.kt)("inlineCode",{parentName:"p"},"Adam")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Karissa"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"MATCH (u:User)-[f:Follows]->(u1:User)\nWHERE u.name = 'Adam' AND u1.name = 'Karissa'\nDELETE f\nRETURN f;\n---------------------------------------------------------\n| f                                                     |\n---------------------------------------------------------\n| (0:0)-{_LABEL: Follows, _ID: 2:0, since: 2020}->(0:1) |\n---------------------------------------------------------\n")),(0,l.kt)("h3",{id:"delete-multi-label-relationships"},"Delete Multi Label Relationships"),(0,l.kt)("p",null,'The following query deletes all out-going edges from "Karissa".'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"MATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nRETURN u.name, u1.name;\n----------------------\n| u.name  | u1.name  |\n----------------------\n| Karissa | Zhang    |\n----------------------\n| Karissa | Waterloo |\n----------------------\nMATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nDELETE f;\nMATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nRETURN u.name, u1.name;\n--------------------\n| u.name | u1.name |\n--------------------\n")))}c.isMDXComponent=!0},5973:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);