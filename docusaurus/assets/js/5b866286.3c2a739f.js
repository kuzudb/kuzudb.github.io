"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[3213],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>f});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function c(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?c(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},c=Object.keys(t);for(n=0;n<c.length;n++)r=c[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(t);for(n=0;n<c.length;n++)r=c[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var o=n.createContext({}),u=function(t){var e=n.useContext(o),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},s=function(t){var e=u(t.components);return n.createElement(o.Provider,{value:e},t.children)},p="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,c=t.originalType,o=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),p=u(r),d=a,f=p["".concat(o,".").concat(d)]||p[d]||m[d]||c;return r?n.createElement(f,l(l({ref:e},s),{},{components:r})):n.createElement(f,l({ref:e},s))}));function f(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var c=r.length,l=new Array(c);l[0]=d;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[p]="string"==typeof t?t:a,l[1]=i;for(var u=2;u<c;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5130:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>m,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const c={title:"Struct Functions",description:"Struct functions are used to create and extract fields from structs."},l="Struct Operators",i={unversionedId:"cypher/expressions/struct-functions",id:"cypher/expressions/struct-functions",title:"Struct Functions",description:"Struct functions are used to create and extract fields from structs.",source:"@site/docs/cypher/expressions/struct-functions.md",sourceDirName:"cypher/expressions",slug:"/cypher/expressions/struct-functions",permalink:"/docusaurus/cypher/expressions/struct-functions",draft:!1,tags:[],version:"current",frontMatter:{title:"Struct Functions",description:"Struct functions are used to create and extract fields from structs."},sidebar:"docSidebar",previous:{title:"Pattern Matching Functions",permalink:"/docusaurus/cypher/expressions/pattern-matching"},next:{title:"Text Functions",permalink:"/docusaurus/cypher/expressions/text-functions"}},o={},u=[],s={toc:u},p="wrapper";function m(t){let{components:e,...r}=t;return(0,a.kt)(p,(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"struct-operators"},"Struct Operators"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operator"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"),(0,a.kt)("th",{parentName:"tr",align:null},"Result"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"{key:value,}"),(0,a.kt)("td",{parentName:"tr",align:null},"creates a STRUCT containing the key value pairs"),(0,a.kt)("td",{parentName:"tr",align:null},"{name: 'Alice', age: 20}"),(0,a.kt)("td",{parentName:"tr",align:null},"{NAME: Alice, AGE: 20}")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"struct.'field_name'"),(0,a.kt)("td",{parentName:"tr",align:null},"alias of struct_extract"),(0,a.kt)("td",{parentName:"tr",align:null},"{name: 'Alice', age: 20}.name"),(0,a.kt)("td",{parentName:"tr",align:null},"'Alice'")))),(0,a.kt)("h1",{id:"struct-functions"},"Struct Functions"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Function"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"),(0,a.kt)("th",{parentName:"tr",align:null},"Result"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"struct_extract(struct, 'field_name')"),(0,a.kt)("td",{parentName:"tr",align:null},"extracts named field from struct"),(0,a.kt)("td",{parentName:"tr",align:null},"struct_extract({name: 'Alice', age: 20}, 'name')"),(0,a.kt)("td",{parentName:"tr",align:null},"'Alice'")))))}m.isMDXComponent=!0}}]);