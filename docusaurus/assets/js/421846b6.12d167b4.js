"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[1275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||i;return n?a.createElement(m,l(l({ref:t},c),{},{components:n})):a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={title:"Command Line",sidebar_position:0,description:"Through the CLI, you can issue Cypher queries or call shell commands."},l="K\xf9zu CLI",o={unversionedId:"client-apis/cli",id:"client-apis/cli",title:"Command Line",description:"Through the CLI, you can issue Cypher queries or call shell commands.",source:"@site/docs/client-apis/cli.md",sourceDirName:"client-apis",slug:"/client-apis/cli",permalink:"/docusaurus/client-apis/cli",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Command Line",sidebar_position:0,description:"Through the CLI, you can issue Cypher queries or call shell commands."},sidebar:"docSidebar",previous:{title:"Client APIs",permalink:"/docusaurus/client-apis/"},next:{title:"Python",permalink:"/docusaurus/client-apis/python"}},s={},u=[{value:"Start the shell",id:"start-the-shell",level:2},{value:"Shell commands",id:"shell-commands",level:2},{value:"<code>:help</code>",id:"help",level:3},{value:"<code>:clear</code>",id:"clear",level:3},{value:"<code>:quit</code>",id:"quit",level:3},{value:"<code>:max_rows [max_rows]</code>",id:"max_rows-max_rows",level:3},{value:"<code>:max_width [max_width]</code>",id:"max_width-max_width",level:3},{value:"Interrupt",id:"interrupt",level:2},{value:"Non-interactive usage",id:"non-interactive-usage",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"k\xf9zu-cli"},"K\xf9zu CLI"),(0,r.kt)("p",null,"K\xf9zu provides a command line interface (CLI) through which you can issue Cypher queries or call shell\ncommands. See the ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/getting-started/cli"},"getting started page")," for instructions on how\nto install the CLI and its basic usage."),(0,r.kt)("h2",{id:"start-the-shell"},"Start the shell"),(0,r.kt)("p",null,"Navigate to the directory where the K\xf9zu CLI is located and run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./kuzu <db_path>\n")),(0,r.kt)("p",null,"Where ",(0,r.kt)("inlineCode",{parentName:"p"},"<db_path>")," is the directory for the database files.\nThis path can point to an existing database or a yet-to-be-created directory, in which case\nK\xf9zu will automatically create the directory and initialize an empty database for you."),(0,r.kt)("p",null,"You can view the additional shell startup flags by running ",(0,r.kt)("inlineCode",{parentName:"p"},"./kuzu -h"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ ./kuzu -h\nhelp\n  ./kuzu databasePath {OPTIONS}\n    KuzuDB Shell\n\n  OPTIONS:\n\n      databasePath                      Database path.\n      -h, --help                        Display this help menu\n      -d, --defaultBPSize               Size of buffer pool for default and\n                                        large page sizes in megabytes\n      --nocompression                   Disable compression\n      -r, --readOnly                    Open database at read-only mode.\n      -p                                Path to directory for shell history\n      -v, --version                     Display current database version\n      "--" can be used to terminate flag options and force all following\n      arguments to be treated as positional options\n')),(0,r.kt)("h2",{id:"shell-commands"},"Shell commands"),(0,r.kt)("p",null,"Once you start the shell, you can issue Cypher queries as shown ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/getting-started/cli#execute-cypher-query"},"here"),", or call\nany of the shell commands listed below."),(0,r.kt)("h3",{id:"help"},(0,r.kt)("inlineCode",{parentName:"h3"},":help")),(0,r.kt)("p",null,"Show built-in command list within the K\xf9zu shell."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :help\n    :help     get command list\n    :clear     clear shell\n    :quit     exit from shell\n    :max_rows [max_rows]     set maximum number of rows for display (default: 20)\n    :max_width [max_width]     set maximum width in characters for display\n\n    Note: you can change and see several system configurations, such as num-threads, \n          timeout, and logging_level using Cypher CALL statements.\n          e.g. CALL THREADS=5; or CALL current_setting('threads') return *;\n          See: https://kuzudb.com/docusaurus/cypher/configuration\n")),(0,r.kt)("h3",{id:"clear"},(0,r.kt)("inlineCode",{parentName:"h3"},":clear")),(0,r.kt)("p",null,"Clear shell. Alternatively, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl + L")," to clear the shell."),(0,r.kt)("h3",{id:"quit"},(0,r.kt)("inlineCode",{parentName:"h3"},":quit")),(0,r.kt)("p",null,"Exit from shell. Alternatively, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl + D")," to exit the shell."),(0,r.kt)("h3",{id:"max_rows-max_rows"},(0,r.kt)("inlineCode",{parentName:"h3"},":max_rows [max_rows]")),(0,r.kt)("p",null,"Set maximum number of rows for display. 0 defaults to 20."),(0,r.kt)("h3",{id:"max_width-max_width"},(0,r.kt)("inlineCode",{parentName:"h3"},":max_width [max_width]")),(0,r.kt)("p",null,"Set maximum width in characters for display. Defaults to terminal width if unable to display first and last columns. "),(0,r.kt)("h2",{id:"interrupt"},"Interrupt"),(0,r.kt)("p",null,"To interrupt a running query, use ",(0,r.kt)("inlineCode",{parentName:"p"},"Ctrl + C")," in CLI. Note: We currently don't support interrupting ",(0,r.kt)("inlineCode",{parentName:"p"},"COPY")," statement."),(0,r.kt)("h2",{id:"non-interactive-usage"},"Non-interactive usage"),(0,r.kt)("p",null,"To read and process a file in non-interactive mode, pipe the file content to the CLI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./kuzu testdb < tinysnb/schema.cypher\n---------------------------------------\n| outputMsg                           |\n---------------------------------------\n| NodeTable: person has been created. |\n")))}d.isMDXComponent=!0}}]);