"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[9321],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),h=r,m=p["".concat(s,".").concat(h)]||p[h]||d[h]||o;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2991:(e,t,a)=>{a.d(t,{Z:()=>b});var n=a(7294),r=a(6010),o=a(3438),i=a(9960),l=a(3919),s=a(5999);const c={cardContainer:"cardContainer_fWXF",cardTitle:"cardTitle_rnsV",cardDescription:"cardDescription_PWke"};function u(e){let{href:t,children:a}=e;return n.createElement(i.Z,{href:t,className:(0,r.Z)("card padding--lg",c.cardContainer)},a)}function p(e){let{href:t,icon:a,title:o,description:i}=e;return n.createElement(u,{href:t},n.createElement("h2",{className:(0,r.Z)("text--truncate",c.cardTitle),title:o},a," ",o),i&&n.createElement("p",{className:(0,r.Z)("text--truncate",c.cardDescription),title:i},i))}function d(e){let{item:t}=e;const a=(0,o.Wl)(t);return a?n.createElement(p,{href:a,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,s.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function h(e){let{item:t}=e;const a=(0,l.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",r=(0,o.xz)(t.docId??void 0);return n.createElement(p,{href:t.href,icon:a,title:t.label,description:t.description??(null==r?void 0:r.description)})}function m(e){let{item:t}=e;switch(t.type){case"link":return n.createElement(h,{item:t});case"category":return n.createElement(d,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const a=(0,o.jA)();return n.createElement(b,{items:a.items,className:t})}function b(e){const{items:t,className:a}=e;if(!t)return n.createElement(f,e);const i=(0,o.MN)(t);return n.createElement("section",{className:(0,r.Z)("row",a)},i.map(((e,t)=>n.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},n.createElement(m,{item:e})))))}},5864:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>f,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const o=a.p+"assets/images/datasets-panel-b897acc20b8209ff9df8468d2766b73f.png";var i=a(2991),l=(a(3986),a(724));const s={},c="K\xf9zuExplorer",u={unversionedId:"kuzuexplorer/index",id:"kuzuexplorer/index",title:"K\xf9zuExplorer",description:"Overview",source:"@site/docs/kuzuexplorer/index.md",sourceDirName:"kuzuexplorer",slug:"/kuzuexplorer/",permalink:"/docusaurus/kuzuexplorer/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Preloaded RDFGraphs",permalink:"/docusaurus/rdf-graphs/rdfgraphs-repo"},next:{title:"Shell Panel",permalink:"/docusaurus/kuzuexplorer/shell-panel"}},p={},d=[{value:"Overview",id:"overview",level:2},{value:"Launching Explorer",id:"launching-explorer",level:2},{value:"Option 1: Using an existing database",id:"option-1-using-an-existing-database",level:3},{value:"Option 2: Start with an empty database with example data",id:"option-2-start-with-an-empty-database-with-example-data",level:3},{value:"Additional launch configurations",id:"additional-launch-configurations",level:3},{value:"Access mode",id:"access-mode",level:4},{value:"Buffer pool size",id:"buffer-pool-size",level:4},{value:"Accessing data files in the container",id:"accessing-data-files-in-the-container",level:4},{value:"K\xf9zuExplorer Panels",id:"k\xf9zuexplorer-panels",level:2}],h={toc:d},m="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"k\xf9zuexplorer"},"K\xf9zuExplorer"),(0,r.kt)("img",{src:l.Z}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"K\xf9zuExplorer is K\xf9zu's browser-based frontend to visualize and explore database schemas\nand query results in the form of a graph, table, or in json. This is a very useful tool for exploring\ndatabases and debugging applications during prototyping phase. These documentation pages describes the\ndifferent panels in K\xf9zuExplorer. Here, we first explain how to launch K\xf9zuExplorer."),(0,r.kt)("h2",{id:"launching-explorer"},"Launching Explorer"),(0,r.kt)("p",null,"K\xf9zuExplorer is a web application that is launched from a deployed Docker image.\nPlease refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"Docker documentation")," for details on how to install and use Docker."),(0,r.kt)("p",null,"Below we show two different ways to launch K\xf9zuExplorer. Each of these options make\nK\xf9zuExplorer accessible on ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:8000"},"http://localhost:8000"),". If the launching is successful, you should see the logs similar to the following in your shell:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Access mode: READ_WRITE\nVersion of K\xf9zu: v0.0.11\nDeployed server started on port: 8000\n")),(0,r.kt)("h3",{id:"option-1-using-an-existing-database"},"Option 1: Using an existing database"),(0,r.kt)("p",null,"To access an existing K\xf9zu database, you can mount its path to the ",(0,r.kt)("inlineCode",{parentName:"p"},"/database")," directory as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8000:8000 \\\n           -v /absolute/path/to/database:/database \\\n           --rm kuzudb/explorer:latest\n")),(0,r.kt)("p",null,"By mounting local database files to Docker via ",(0,r.kt)("inlineCode",{parentName:"p"},"-v /absolute/path/to/database:/database"),",\nthe changes done in the UI will persist to the local database files after the UI is shutdown."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"--rm")," flag tells docker that the container should automatically be removed after we close docker."),(0,r.kt)("h3",{id:"option-2-start-with-an-empty-database-with-example-data"},"Option 2: Start with an empty database with example data"),(0,r.kt)("p",null,"You can also launch K\xf9zuExplorer without specifying an existing database. K\xf9zuExplorer comes with\nbundled datasets that you can use to explore the basic functionalities of K\xf9zu.\nThis is simply done by removing the ",(0,r.kt)("inlineCode",{parentName:"p"},"-v")," flag in the example above. If no database path is specified\nwith ",(0,r.kt)("inlineCode",{parentName:"p"},"-v"),", the server will be started with an empty database."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8000:8000 --rm kuzudb/explorer:latest\n")),(0,r.kt)("p",null,"Click on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Datasets"),' tab on the top right corner and then: (i) you can select one of the bundled dataset\nof your choice from the drow-down menu; (ii) load it into K\xf9zu by clicking the "Load Dataset" button; and (iii)\nfinally use K\xf9zuExplorer to explore it.'),(0,r.kt)("img",{src:o}),(0,r.kt)("h3",{id:"additional-launch-configurations"},"Additional launch configurations"),(0,r.kt)("h4",{id:"access-mode"},"Access mode"),(0,r.kt)("p",null,"By default, K\xf9zuExplorer is launched in read-write mode, which means that you can modify the database. If you want to launch K\xf9zuExplorer in read-only mode, you can do so by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"MODE")," environment variable to ",(0,r.kt)("inlineCode",{parentName:"p"},"READ_ONLY")," as follows."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8000:8000 \\\n           -v /absolute/path/to/database:/database \\\n           -e MODE=READ_ONLY \\\n           --rm kuzudb/explorer:latest\n")),(0,r.kt)("p",null,"In read-only mode, you can still issue read queries and visualize the results, but you cannot run write queries or modify the schema."),(0,r.kt)("h4",{id:"buffer-pool-size"},"Buffer pool size"),(0,r.kt)("p",null,"By default, K\xf9zuExplorer is launched with a maximum buffer pool size of 80% of the available memory. If you want to launch K\xf9zuExplorer with a different buffer pool size, you can do so by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"KUZU_BUFFER_POOL_SIZE")," environment variable to the desired value in bytes as follows."),(0,r.kt)("p",null,"For example, to launch K\xf9zuExplorer with a buffer pool size of 1GB, you can run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8000:8000 \\\n           -v /absolute/path/to/database:/database \\\n           -e KUZU_BUFFER_POOL_SIZE=1073741824 \\\n           --rm kuzudb/explorer:latest\n")),(0,r.kt)("h4",{id:"accessing-data-files-in-the-container"},"Accessing data files in the container"),(0,r.kt)("p",null,"As mentioned above, K\xf9zuExplorer is launched from a Docker image. If you want to access the data files in the container, you can do so by mounting a directory on your host machine as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -p 8000:8000 \\\n           -v /absolute/path/to/database:/database \\\n           -v /absolute/path/to/data:/data \\\n           --rm kuzudb/explorer:latest\n")),(0,r.kt)("p",null,"With this configuration, the data directory you specify on your host machine will be accessible as ",(0,r.kt)("inlineCode",{parentName:"p"},"/data")," in the container. For example, in the shell panel, you can copy a CSV file into your database by running the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cypher"},'COPY Test FROM "test.csv" (HEADER=true);\n')),(0,r.kt)("p",null,"Note that it is possible to mount multiple directories in the container. For more details, please refer to the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/bind-mounts/"},"Docker documentation"),"."),(0,r.kt)("h2",{id:"k\xf9zuexplorer-panels"},"K\xf9zuExplorer Panels"),(0,r.kt)("p",null,"K\xf9zuExplorer has 3 panels: (i) the ",(0,r.kt)("inlineCode",{parentName:"p"},"Shell")," panel, (ii) the ",(0,r.kt)("inlineCode",{parentName:"p"},"Schema")," panel, (iii) the ",(0,r.kt)("inlineCode",{parentName:"p"},"Settings")," panel. For each of these panels, we provide a brief description. Please refer to the corresponding documentation pages below for more details."),(0,r.kt)(i.Z,{mdxType:"DocCardList"}))}f.isMDXComponent=!0},724:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/query-result-graph-view-f8e94eab1e66ff9d083d48a92ececcd1.png"},3986:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/schema-panel-28660c6e189bff43d75bf05de40c1f1b.png"}}]);