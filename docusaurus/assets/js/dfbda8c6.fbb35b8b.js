"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[7832],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=n,h=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return r?a.createElement(h,l(l({ref:t},c),{},{components:r})):a.createElement(h,l({ref:t},c))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var p=2;p<s;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5548:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var a=r(7462),n=(r(7294),r(3905)),s=r(5973);const l={title:"Example database",sidebar_position:0},o="Example Database",i={unversionedId:"cypher/query-clauses/example-database",id:"cypher/query-clauses/example-database",title:"Example database",description:"For the clauses we cover here, we will use the following graph database that",source:"@site/docs/cypher/query-clauses/example-database.md",sourceDirName:"cypher/query-clauses",slug:"/cypher/query-clauses/example-database",permalink:"/docusaurus/cypher/query-clauses/example-database",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/cypher/query-clauses/example-database.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Example database",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Query Clauses",permalink:"/docusaurus/category/query-clauses"},next:{title:"Match",permalink:"/docusaurus/cypher/query-clauses/match"}},p={},c=[{value:"User nodes:",id:"user-nodes",level:3},{value:"City nodes:",id:"city-nodes",level:3},{value:"Follows relationships:",id:"follows-relationships",level:3},{value:"LivesIn relationships:",id:"livesin-relationships",level:3}],u={toc:c},d="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"example-database"},"Example Database"),(0,n.kt)("p",null,"For the clauses we cover here, we will use the following graph database that\nconsists of User and City nodes, Follows relationships between Users,\nand LivesIn relationships between Users and Cities."),(0,n.kt)("img",{src:s.Z,style:{width:800}}),(0,n.kt)("p",null,"The DDL statements to define the schema of this database, the csv files containing\nthe records of the tables in the database and the data import (",(0,n.kt)("inlineCode",{parentName:"p"},"COPY FROM"),") commands\nare given below."),(0,n.kt)("h3",{id:"user-nodes"},"User nodes:"),(0,n.kt)("p",null,"Schema:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"CREATE NODE TABLE User(name STRING, age INT64, PRIMARY KEY (name))\n")),(0,n.kt)("p",null,"user.csv:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Adam,30\nKarissa,40\nZhang,50\nNoura,25\n")),(0,n.kt)("p",null,"Data import (You need to give full path to user.csv. We assume ${PATH-TO-DIR} is that directory):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'COPY User FROM "${PATH-TO-DIR}/user.csv"\n')),(0,n.kt)("h3",{id:"city-nodes"},"City nodes:"),(0,n.kt)("p",null,"Schema:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"CREATE NODE TABLE City(name STRING, population INT64, PRIMARY KEY (name))\n")),(0,n.kt)("p",null,"city.csv"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Waterloo,150000\nKitchener,200000\nGuelph,75000\n")),(0,n.kt)("p",null,"Data import:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'COPY City FROM "${PATH-TO-DIR}/city.csv"\n')),(0,n.kt)("h3",{id:"follows-relationships"},"Follows relationships:"),(0,n.kt)("p",null,"Schema:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"CREATE REL TABLE Follows(FROM User TO User, since INT64)\n")),(0,n.kt)("p",null,"follows.csv"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Adam,Karissa,2020\nAdam,Zhang,2020\nKarissa,Zhang,2021\nZhang,Noura,2022\n")),(0,n.kt)("p",null,"Data import:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'COPY Follows FROM "${PATH-TO-DIR}/follows.csv"\n')),(0,n.kt)("h3",{id:"livesin-relationships"},"LivesIn relationships:"),(0,n.kt)("p",null,"Schema:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"CREATE REL TABLE LivesIn(FROM User TO City)\n")),(0,n.kt)("p",null,"lives-in.csv"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Adam,Waterloo\nKarissa,Waterloo\nZhang,Kitchener\nNoura,Guelph\n")),(0,n.kt)("p",null,"Data import:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'COPY LivesIn FROM "${PATH-TO-DIR}/lives-in.csv"\n')))}m.isMDXComponent=!0},5973:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);