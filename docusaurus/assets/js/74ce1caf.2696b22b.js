"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[7822],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=a.createContext({}),u=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=o,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||n;return r?a.createElement(f,l(l({ref:t},s),{},{components:r})):a.createElement(f,l({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,l=new Array(n);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<n;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5080:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>i,toc:()=>u});var a=r(7462),o=(r(7294),r(3905));const n={title:"Parquet"},l="Data Import from Parquet Files",i={unversionedId:"data-import/parquet-import",id:"data-import/parquet-import",title:"Parquet",description:"Apache Parquet is an open source, column-oriented data file format designed for efficient data storage and retrieval. We support data import from parquet files through COPY FROM command.",source:"@site/docs/data-import/parquet-import.md",sourceDirName:"data-import",slug:"/data-import/parquet-import",permalink:"/docusaurus/data-import/parquet-import",draft:!1,tags:[],version:"current",frontMatter:{title:"Parquet"},sidebar:"tutorialSidebar",previous:{title:"NPY",permalink:"/docusaurus/data-import/npy-import"},next:{title:"Data Export",permalink:"/docusaurus/data-export/"}},p={},u=[{value:"Notes",id:"notes",level:2},{value:"<code>COPY FROM</code> a Parquet File to a Node Table",id:"copy-from-a-parquet-file-to-a-node-table",level:2},{value:"<code>COPY FROM</code> a Parquet File to a Rel Table",id:"copy-from-a-parquet-file-to-a-rel-table",level:2},{value:"<code>COPY FROM</code> Multiple Parquet Files to a Single Table",id:"copy-from-multiple-parquet-files-to-a-single-table",level:2}],s={toc:u},m="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-import-from-parquet-files"},"Data Import from Parquet Files"),(0,o.kt)("p",null,"Apache Parquet is an open source, column-oriented data file format designed for efficient data storage and retrieval. We support data import from parquet files through ",(0,o.kt)("inlineCode",{parentName:"p"},"COPY FROM")," command."),(0,o.kt)("h2",{id:"notes"},"Notes"),(0,o.kt)("p",null,"Similar to importing from CSV files, there are several rules about importing from parquet files."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Starting with empty tables")," "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Copying nodes before rels")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Extra columns in csv files"))),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docusaurus/data-import/csv-import#several-notes"},"notes in CSV import")," for details."),(0,o.kt)("h2",{id:"copy-from-a-parquet-file-to-a-node-table"},(0,o.kt)("inlineCode",{parentName:"h2"},"COPY FROM")," a Parquet File to a Node Table"),(0,o.kt)("p",null,"Similar to copy from a csv file to a node table, the order of the columns in a parquet file need to match the order of predefined properties for node tables in the catalog, i.e. the order used when defining the schema of a node table."),(0,o.kt)("p",null,'Example parquet file for "user.parquet". The output is obtained from ',(0,o.kt)("inlineCode",{parentName:"p"},"print(pyarrow.Table)"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'pyarrow.Table\nname: string\nage: int64\n----\nname: [["Adam","Karissa","Zhang","Noura"]]\nage: [[30,40,50,25]]\n')),(0,o.kt)("p",null,"To load this parquet into User table. Simply run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'COPY User FROM "user.parquet";\n')),(0,o.kt)("h2",{id:"copy-from-a-parquet-file-to-a-rel-table"},(0,o.kt)("inlineCode",{parentName:"h2"},"COPY FROM")," a Parquet File to a Rel Table"),(0,o.kt)("p",null,'Similar to copy from a csv file to a rel table. The order of columns should the "from" column, the "to" column and the predefined properties on the rel table as defined in ',(0,o.kt)("inlineCode",{parentName:"p"},"CREATE REL TABLE")," command."),(0,o.kt)("p",null,'Example parquet file for "follows.parquet". The output is obtained from ',(0,o.kt)("inlineCode",{parentName:"p"},"print(pyarrow.Table)"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'pyarrow.Table\nfrom: string\nto: string\nsince: int64\n----\nfrom: [["Adam","Adam","Karissa","Zhang"]]\nto: [["Karissa","Zhang","Zhang","Noura"]]\nsince: [[2020,2020,2021,2022]]\n')),(0,o.kt)("p",null,"To load this parquet into Follows table. Simply run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'COPY Follows FROM "follows.parquet";\n')),(0,o.kt)("h2",{id:"copy-from-multiple-parquet-files-to-a-single-table"},(0,o.kt)("inlineCode",{parentName:"h2"},"COPY FROM")," Multiple Parquet Files to a Single Table"),(0,o.kt)("p",null,"Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"/docusaurus/data-import/csv-import#copy-from-multiple-csv-files-to-a-single-table"},"COPY FROM MULTIPLE CSV FILES")," section for details."))}c.isMDXComponent=!0}}]);