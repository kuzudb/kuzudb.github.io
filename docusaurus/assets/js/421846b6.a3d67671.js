"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[1275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=l.createContext({}),u=function(e){var t=l.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?l.createElement(h,i(i({ref:t},p),{},{components:n})):l.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2379:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>u});var l=n(7462),r=(n(7294),n(3905));const a={title:"CLI",sidebar_position:0,description:"Through CLI, you can issue Cypher queries or call shell commands."},i="K\xf9zu CLI",o={unversionedId:"client-apis/cli",id:"client-apis/cli",title:"CLI",description:"Through CLI, you can issue Cypher queries or call shell commands.",source:"@site/docs/client-apis/cli.md",sourceDirName:"client-apis",slug:"/client-apis/cli",permalink:"/docusaurus/client-apis/cli",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"CLI",sidebar_position:0,description:"Through CLI, you can issue Cypher queries or call shell commands."},sidebar:"tutorialSidebar",previous:{title:"Client APIs",permalink:"/docusaurus/client-apis/"},next:{title:"Python API",permalink:"/docusaurus/client-apis/python-api/"}},s={},u=[{value:"<code>:help</code>",id:"help",level:3},{value:"<code>:clear</code>",id:"clear",level:3},{value:"<code>:quit</code>",id:"quit",level:3},{value:"<code>:thread [num_thread]</code>",id:"thread-num_thread",level:3},{value:"<code>:loggin_level [logging_level]</code>",id:"loggin_level-logging_level",level:3},{value:"<code>:timeout</code>",id:"timeout",level:3},{value:"<code>:list_nodes</code>",id:"list_nodes",level:3},{value:"<code>:list_rels</code>",id:"list_rels",level:3},{value:"<code>:show_node [node_name]</code>",id:"show_node-node_name",level:3},{value:"<code>:show_rel [rel_name]</code>",id:"show_rel-rel_name",level:3},{value:"Interrupt",id:"interrupt",level:3},{value:"Non-interactive usage",id:"non-interactive-usage",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"k\xf9zu-cli"},"K\xf9zu CLI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#k%C3%B9zu-cli"},"K\xf9zu CLI"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#help"},(0,r.kt)("inlineCode",{parentName:"a"},":help"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#clear"},(0,r.kt)("inlineCode",{parentName:"a"},":clear"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#quit"},(0,r.kt)("inlineCode",{parentName:"a"},":quit"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#thread-num_thread"},(0,r.kt)("inlineCode",{parentName:"a"},":thread [num_thread]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#loggin_level-logging_level"},(0,r.kt)("inlineCode",{parentName:"a"},":loggin_level [logging_level]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#timeout"},(0,r.kt)("inlineCode",{parentName:"a"},":timeout"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#list_nodes"},(0,r.kt)("inlineCode",{parentName:"a"},":list_nodes"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#list_rels"},(0,r.kt)("inlineCode",{parentName:"a"},":list_rels"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#show_node-node_name"},(0,r.kt)("inlineCode",{parentName:"a"},":show_node [node_name]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#show_rel-rel_name"},(0,r.kt)("inlineCode",{parentName:"a"},":show_rel [rel_name]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#interrupt"},"Interrupt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#non-interactive-usage"},"Non-interactive usage"))))),(0,r.kt)("p",null,"Please see the ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/getting-started/introduction-examples#cli"},"getting started page")," for instructions on how\nto install K\xf9zu's command line interface and its basic usage. Through CLI, you can issue Cypher queries or call shell commands."),(0,r.kt)("h3",{id:"help"},(0,r.kt)("inlineCode",{parentName:"h3"},":help")),(0,r.kt)("p",null,"Show built-in command list."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :help\n    :help     get command list\n    :clear     clear shell\n    :quit     exit from shell\n    :thread [num_threads]     set number of threads for query execution\n    :logging_level [logging_level]     set logging level of database, available options: debug, info, err\n    :timeout [query_timeout]     set query timeout in ms\n    :list_nodes     list all node tables\n    :list_rels     list all rel tables\n    :show_node     [table_name] show node schema\n    :show_rel     [table_name] show rel schema\n")),(0,r.kt)("h3",{id:"clear"},(0,r.kt)("inlineCode",{parentName:"h3"},":clear")),(0,r.kt)("p",null,"Clear shell."),(0,r.kt)("h3",{id:"quit"},(0,r.kt)("inlineCode",{parentName:"h3"},":quit")),(0,r.kt)("p",null,"Exit from shell."),(0,r.kt)("h3",{id:"thread-num_thread"},(0,r.kt)("inlineCode",{parentName:"h3"},":thread [num_thread]")),(0,r.kt)("p",null,"Set maximum number of threads to execute query in current connection."),(0,r.kt)("h3",{id:"loggin_level-logging_level"},(0,r.kt)("inlineCode",{parentName:"h3"},":loggin_level [logging_level]")),(0,r.kt)("p",null,"Set logging level, available options: debug, info, err"),(0,r.kt)("h3",{id:"timeout"},(0,r.kt)("inlineCode",{parentName:"h3"},":timeout")),(0,r.kt)("p",null,"Set query timeout in ms."),(0,r.kt)("h3",{id:"list_nodes"},(0,r.kt)("inlineCode",{parentName:"h3"},":list_nodes")),(0,r.kt)("p",null,"List all node tables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :list_nodes\nNode tables:\n    City\n    User\n")),(0,r.kt)("h3",{id:"list_rels"},(0,r.kt)("inlineCode",{parentName:"h3"},":list_rels")),(0,r.kt)("p",null,"List all rel tables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :list_rels\nRel tables:\n    Follows\n    LivesIn\n")),(0,r.kt)("h3",{id:"show_node-node_name"},(0,r.kt)("inlineCode",{parentName:"h3"},":show_node [node_name]")),(0,r.kt)("p",null,"Show node schema for ","[node_name]"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :show_node User\nUser properties:\n    name STRING(PRIMARY KEY)\n    age INT64\n")),(0,r.kt)("h3",{id:"show_rel-rel_name"},(0,r.kt)("inlineCode",{parentName:"h3"},":show_rel [rel_name]")),(0,r.kt)("p",null,"Show rel schema for ","[rel_name]"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kuzu> :show_rel Follows\nFollows src node: User\nFollows dst node: User\nFollows properties:\n    since INT64\n")),(0,r.kt)("h3",{id:"interrupt"},"Interrupt"),(0,r.kt)("p",null,"To interrupt a running query, use ",(0,r.kt)("inlineCode",{parentName:"p"},"ctrl + C")," in CLI. Note: currently we don't support interrupting ",(0,r.kt)("inlineCode",{parentName:"p"},"COPY")," statement."),(0,r.kt)("h3",{id:"non-interactive-usage"},"Non-interactive usage"),(0,r.kt)("p",null,"To read and process a file in non-interactive mode, pipe the file content to CLI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./kuzu_shell testdb < tinysnb/schema.cypher\n---------------------------------------\n| outputMsg                           |\n---------------------------------------\n| NodeTable: person has been created. |\n---------------------------------------\n\n")))}c.isMDXComponent=!0}}]);