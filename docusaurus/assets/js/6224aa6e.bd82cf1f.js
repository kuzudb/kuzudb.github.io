"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[9650],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function p(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var i=n.createContext({}),s=function(t){var e=n.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},u=function(t){var e=s(t.components);return n.createElement(i.Provider,{value:e},t.children)},c="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,i=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),c=s(r),d=a,g=c["".concat(i,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(g,l(l({ref:e},u),{},{components:r})):n.createElement(g,l({ref:e},u))}));function g(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,l=new Array(o);l[0]=d;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p[c]="string"==typeof t?t:a,l[1]=p;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2854:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={title:"Comparison Operators",description:"Comparison operators are used to compare two values."},l="Comparison Operators",p={unversionedId:"cypher/expressions/comparison-operators",id:"cypher/expressions/comparison-operators",title:"Comparison Operators",description:"Comparison operators are used to compare two values.",source:"@site/docs/cypher/expressions/comparison-operators.md",sourceDirName:"cypher/expressions",slug:"/cypher/expressions/comparison-operators",permalink:"/docusaurus/cypher/expressions/comparison-operators",draft:!1,tags:[],version:"current",frontMatter:{title:"Comparison Operators",description:"Comparison operators are used to compare two values."},sidebar:"docSidebar",previous:{title:"Casting Functions",permalink:"/docusaurus/cypher/expressions/casting"},next:{title:"Date Functions",permalink:"/docusaurus/cypher/expressions/date-functions"}},i={},s=[],u={toc:s},c="wrapper";function m(t){let{components:e,...r}=t;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"comparison-operators"},"Comparison Operators"),(0,a.kt)("p",null,"The following table describes the standard comparison operators supported by K\xf9zu. If any of the input arguments is NULL, the comparison result will also be NULL."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Operator"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"),(0,a.kt)("th",{parentName:"tr",align:null},"Result"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"<"),(0,a.kt)("td",{parentName:"tr",align:null},"less than"),(0,a.kt)("td",{parentName:"tr",align:null},"2 < 3"),(0,a.kt)("td",{parentName:"tr",align:null},"True (BOOLEAN)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},">"),(0,a.kt)("td",{parentName:"tr",align:null},"greater than"),(0,a.kt)("td",{parentName:"tr",align:null},"1 ",">"," 5"),(0,a.kt)("td",{parentName:"tr",align:null},"False (BOOLEAN)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"<="),(0,a.kt)("td",{parentName:"tr",align:null},"less than or equal to"),(0,a.kt)("td",{parentName:"tr",align:null},"3 <= 3"),(0,a.kt)("td",{parentName:"tr",align:null},"True (BOOLEAN)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},">","="),(0,a.kt)("td",{parentName:"tr",align:null},"greater than or equal to"),(0,a.kt)("td",{parentName:"tr",align:null},"4 ",">","= 2"),(0,a.kt)("td",{parentName:"tr",align:null},"True (BOOLEAN)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"="),(0,a.kt)("td",{parentName:"tr",align:null},"equal"),(0,a.kt)("td",{parentName:"tr",align:null},"NULL = NULL"),(0,a.kt)("td",{parentName:"tr",align:null},"NULL")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"<",">"),(0,a.kt)("td",{parentName:"tr",align:null},"not equal"),(0,a.kt)("td",{parentName:"tr",align:null},"5 <",">"," NULL"),(0,a.kt)("td",{parentName:"tr",align:null},"NULL")))))}m.isMDXComponent=!0}}]);