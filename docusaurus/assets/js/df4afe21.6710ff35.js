"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[9793],{3905:(e,t,r)=>{r.d(t,{Zo:()=>o,kt:()=>y});var u=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);t&&(u=u.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,u)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,u,n=function(e,t){if(null==e)return{};var r,u,n={},l=Object.keys(e);for(u=0;u<l.length;u++)r=l[u],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(u=0;u<l.length;u++)r=l[u],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=u.createContext({}),p=function(e){var t=u.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},o=function(e){var t=p(e.components);return u.createElement(i.Provider,{value:t},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return u.createElement(u.Fragment,{},t)}},c=u.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),k=p(r),c=n,y=k["".concat(i,".").concat(c)]||k[c]||m[c]||l;return r?u.createElement(y,a(a({ref:t},o),{},{components:r})):u.createElement(y,a({ref:t},o))}));function y(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,a=new Array(l);a[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[k]="string"==typeof e?e:n,a[1]=s;for(var p=2;p<l;p++)a[p]=r[p];return u.createElement.apply(null,a)}return u.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8432:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var u=r(7462),n=(r(7294),r(3905));const l={title:"Query Result",sidebar_position:2},a=void 0,s={unversionedId:"client-apis/c-api/query_result",id:"client-apis/c-api/query_result",title:"Query Result",description:"struct kuzuqueryresult",source:"@site/docs/client-apis/c-api/query_result.md",sourceDirName:"client-apis/c-api",slug:"/client-apis/c-api/query_result",permalink:"/docusaurus/client-apis/c-api/query_result",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Query Result",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Connection",permalink:"/docusaurus/client-apis/c-api/connection"},next:{title:"Tuple",permalink:"/docusaurus/client-apis/c-api/tuple"}},i={},p=[{value:"struct kuzu_query_result",id:"struct-kuzu_query_result",level:2}],o={toc:p},k="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(k,(0,u.Z)({},o,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"struct-kuzu_query_result"},"struct kuzu_query_result"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"void kuzu_query_result_destroy (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Destroys the given query result instance. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to destroy. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"kuzu_logical_type* kuzu_query_result_get_column_data_type (kuzu_query_result * query_result, uint64_t index)\n")),(0,n.kt)("p",null,"Returns the data type of the column at the given index. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"index")," The index of the column to return data type. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"char* kuzu_query_result_get_column_name (kuzu_query_result * query_result, uint64_t index)\n")),(0,n.kt)("p",null,"Returns the column name at the given index. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"index")," The index of the column to return name. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"char* kuzu_query_result_get_error_message (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the error message if the query is failed. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to check and return error message. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"kuzu_flat_tuple* kuzu_query_result_get_next (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the next tuple in the query result. Throws an exception if there is no more tuple. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"uint64_t kuzu_query_result_get_num_columns (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the number of columns in the query result. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"uint64_t kuzu_query_result_get_num_tuples (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the number of tuples in the query result. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"kuzu_query_summary* kuzu_query_result_get_query_summary (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the query summary of the query result. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"bool kuzu_query_result_has_next (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns true if we have not consumed all tuples in the query result, false otherwise. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to check. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"bool kuzu_query_result_is_success (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns true if the query is executed successful, false otherwise. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to check. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"void kuzu_query_result_reset_iterator (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Resets the iterator of the query result to the beginning of the query result. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to reset iterator. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"char* kuzu_query_result_to_string (kuzu_query_result * query_result)\n")),(0,n.kt)("p",null,"Returns the query result as a string. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"void kuzu_query_result_write_to_csv (kuzu_query_result * query_result, const char * file_path, char delimiter, char escape_char, char new_line)\n")),(0,n.kt)("p",null,"Writes the query result to the given file path as CSV. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to write. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"file_path")," The file path to write the query result. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"delimiter")," The delimiter character to use when writing csv file. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"escape_char")," The escape character to use when writing csv file. "),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"new_line")," The new line character to use when writing csv file. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"void kuzu_query_summary_destroy (kuzu_query_summary * query_summary)\n")),(0,n.kt)("p",null,"Destroys the given query summary. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_summary")," The query summary to destroy. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"double kuzu_query_summary_get_compiling_time (kuzu_query_summary * query_summary)\n")),(0,n.kt)("p",null,"Returns the compilation time of the given query summary. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_summary")," The query summary to get compilation time. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"double kuzu_query_summary_get_execution_time (kuzu_query_summary * query_summary)\n")),(0,n.kt)("p",null,"Returns the execution time of the given query summary. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_summary")," The query summary to get execution time. ")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"struct ArrowSchema kuzu_query_result_get_arrow_schema(kuzu_query_result* query_result);\n")),(0,n.kt)("p",null,"Returns the query result's schema as ArrowSchema."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return.")),(0,n.kt)("hr",null),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"struct ArrowArray kuzu_query_result_get_next_arrow_chunk(\n    kuzu_query_result* query_result, int64_t chunk_size);\n")),(0,n.kt)("p",null,"Returns the next chunk of the query result as arrow array. The arrow array internally stores an arrow struct with fields for each of the columns."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Parameters")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"query_result")," The query result instance to return."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"chunk_size")," The number of tuples to return in the chunk.")))}m.isMDXComponent=!0}}]);