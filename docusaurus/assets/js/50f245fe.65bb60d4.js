"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[9574],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},s=Object.keys(e);for(l=0;l<s.length;l++)n=s[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(l=0;l<s.length;l++)n=s[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=l.createContext({}),u=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return l.createElement(o.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},m=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,h=p["".concat(o,".").concat(m)]||p[m]||c[m]||s;return n?l.createElement(h,i(i({ref:t},d),{},{components:n})):l.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r[p]="string"==typeof e?e:a,i[1]=r;for(var u=2;u<s;u++)i[u]=n[u];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var l=n(7462),a=(n(7294),n(3905));const s={title:"Build K\xf9zu from Source",sidebar_position:1},i="Build K\xf9zu from Source",r={unversionedId:"development/building-kuzu",id:"development/building-kuzu",title:"Build K\xf9zu from Source",description:"Note: This documentation is intended for developers who want to build K\xf9zu from source code. If you are a user who wants to use K\xf9zu, please refer to the installation section for downloading pre-built binaries for your platform.",source:"@site/docs/development/building-kuzu.md",sourceDirName:"development",slug:"/development/building-kuzu",permalink:"/docusaurus/development/building-kuzu",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Build K\xf9zu from Source",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Contributor Agreement",permalink:"/docusaurus/CLA"},next:{title:"Testing Framework",permalink:"/docusaurus/development/testing-framework"}},o={},u=[{value:"Building Instructions",id:"building-instructions",level:2},{value:"Ubuntu 22.04 LTS",id:"ubuntu-2204-lts",level:3},{value:"Install dependencies",id:"install-dependencies",level:4},{value:"Build K\xf9zu",id:"build-k\xf9zu",level:4},{value:"AlmaLinux 9.2",id:"almalinux-92",level:3},{value:"Install dependencies",id:"install-dependencies-1",level:4},{value:"Build K\xf9zu",id:"build-k\xf9zu-1",level:4},{value:"Arch Linux",id:"arch-linux",level:3},{value:"Install dependencies",id:"install-dependencies-2",level:4},{value:"Build K\xf9zu",id:"build-k\xf9zu-2",level:4},{value:"macOS 12",id:"macos-12",level:3},{value:"Install command line tools",id:"install-command-line-tools",level:4},{value:"Install homebrew",id:"install-homebrew",level:4},{value:"Install dependencies",id:"install-dependencies-3",level:4},{value:"Build K\xf9zu",id:"build-k\xf9zu-3",level:4},{value:"Windows 10",id:"windows-10",level:3},{value:"Install Visual Studio",id:"install-visual-studio",level:4},{value:"Install Chocolatey",id:"install-chocolatey",level:4},{value:"Install dependencies",id:"install-dependencies-4",level:4},{value:"Launch Visual Studio Command Prompt",id:"launch-visual-studio-command-prompt",level:4},{value:"Build K\xf9zu",id:"build-k\xf9zu-4",level:4},{value:"Run Tests",id:"run-tests",level:2},{value:"C/C++ tests",id:"cc-tests",level:3},{value:"Python tests",id:"python-tests",level:3},{value:"Install dependencies",id:"install-dependencies-5",level:4},{value:"Run Python tests",id:"run-python-tests",level:4},{value:"Increase <code>ulimit</code> for running tests",id:"increase-ulimit-for-running-tests",level:3},{value:"Build Language Bindings",id:"build-language-bindings",level:2},{value:"Node.js",id:"nodejs",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Install dependencies",id:"install-dependencies-6",level:4},{value:"Build Node.js bindings",id:"build-nodejs-bindings",level:4},{value:"Run Node.js tests",id:"run-nodejs-tests",level:4},{value:"Java",id:"java",level:3},{value:"Prerequisites",id:"prerequisites-1",level:4},{value:"Build Java bindings",id:"build-java-bindings",level:4},{value:"Run Java tests",id:"run-java-tests",level:4},{value:"Rust",id:"rust",level:3},{value:"Prerequisites",id:"prerequisites-2",level:4},{value:"Build Rust bindings",id:"build-rust-bindings",level:4},{value:"Run Rust tests",id:"run-rust-tests",level:4}],d={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"build-k\xf9zu-from-source"},"Build K\xf9zu from Source"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"}," Note: This documentation is intended for developers who want to build K\xf9zu from source code. If you are a user who wants to use K\xf9zu, please refer to the ",(0,a.kt)("a",{parentName:"strong",href:"/docusaurus/installation"},"installation section")," for downloading pre-built binaries for your platform. ")),(0,a.kt)("p",null,"To build from source code, K\xf9zu requires Cmake(>=3.11), Python(>=3.7), and a compiler that supports C++20. Note that the header files of Python 3 are also required. The minimum supported version of C++ compilers is GCC 10, Clang 11, and MSVC 19.20. The preferred compiler on Linux is GCC; on macOS, Apple Clang; and on Windows, MSVC. On Linux, Clang is also tested. Other compilers which support C++20 may also work, but they are not tested."),(0,a.kt)("p",null,"Below are the instructions for building K\xf9zu on Ubuntu 22.04 LTS, AlmaLinux 9.2, Arch Linux, macOS 12, and Windows 10. The instructions for other Debian-based Linux distros, such as Debian, Linux Mint, and Pop!","_","OS, should be similar to Ubuntu 22.04 LTS. The instructions for other Red Hat-based Linux distros, such as CentOS, Fedora, and Rocky Linux, and Oracle Linux, should be similar to AlmaLinux 9.2. The instructions for other Arch-based Linux distros, such as Manjaro, should be similar to Arch Linux. For other versions of macOS, the instructions should be similar to macOS 12. For other versions of Windows, the instructions should be similar to Windows 10."),(0,a.kt)("h2",{id:"building-instructions"},"Building Instructions"),(0,a.kt)("h3",{id:"ubuntu-2204-lts"},"Ubuntu 22.04 LTS"),(0,a.kt)("h4",{id:"install-dependencies"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"apt update\napt install -y build-essential cmake gcc g++ python3 python3-dev\n")),(0,a.kt)("h4",{id:"build-k\xf9zu"},"Build K\xf9zu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make release NUM_THREADS=$nproc\n")),(0,a.kt)("h3",{id:"almalinux-92"},"AlmaLinux 9.2"),(0,a.kt)("h4",{id:"install-dependencies-1"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dnf update\ndnf install -y cmake gcc gcc-c++ python3 python3-devel\n")),(0,a.kt)("h4",{id:"build-k\xf9zu-1"},"Build K\xf9zu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make release NUM_THREADS=$nproc\n")),(0,a.kt)("h3",{id:"arch-linux"},"Arch Linux"),(0,a.kt)("h4",{id:"install-dependencies-2"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pacman -Syu\npacman -S --needed base-devel cmake gcc python\n")),(0,a.kt)("h4",{id:"build-k\xf9zu-2"},"Build K\xf9zu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make release NUM_THREADS=$nproc\n")),(0,a.kt)("h3",{id:"macos-12"},"macOS 12"),(0,a.kt)("h4",{id:"install-command-line-tools"},"Install command line tools"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"xcode-select --install\n")),(0,a.kt)("h4",{id:"install-homebrew"},"Install homebrew"),(0,a.kt)("p",null,"Follow the instructions at ",(0,a.kt)("a",{parentName:"p",href:"https://brew.sh/"},"https://brew.sh/"),"."),(0,a.kt)("h4",{id:"install-dependencies-3"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"brew install cmake python\n")),(0,a.kt)("h4",{id:"build-k\xf9zu-3"},"Build K\xf9zu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make release NUM_THREADS=$(sysctl -n hw.physicalcpu)\n")),(0,a.kt)("h3",{id:"windows-10"},"Windows 10"),(0,a.kt)("h4",{id:"install-visual-studio"},"Install Visual Studio"),(0,a.kt)("p",null,"Install Visual Studio 2019 or 2022 with C++ support, CMake, and the SDK for your version of Windows. For detailed instructions, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/cpp/build/vscpp-step-0-installation"},"Microsoft's documentation"),"."),(0,a.kt)("h4",{id:"install-chocolatey"},"Install Chocolatey"),(0,a.kt)("p",null,"Follow the instructions at ",(0,a.kt)("a",{parentName:"p",href:"https://chocolatey.org/install"},"https://chocolatey.org/install"),"."),(0,a.kt)("h4",{id:"install-dependencies-4"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"choco install -y python3 make ninja\n")),(0,a.kt)("h4",{id:"launch-visual-studio-command-prompt"},"Launch Visual Studio Command Prompt"),(0,a.kt)("p",null,"Follow the instructions at ",(0,a.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/cpp/build/building-on-the-command-line"},"Microsoft's documentation"),"."),(0,a.kt)("h4",{id:"build-k\xf9zu-4"},"Build K\xf9zu"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"make release NUM_THREADS=$env:NUMBER_OF_PROCESSORS\n")),(0,a.kt)("h2",{id:"run-tests"},"Run Tests"),(0,a.kt)("h3",{id:"cc-tests"},"C/C++ tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make test NUM_THREADS=X\n")),(0,a.kt)("p",null,"For additional information regarding the tests, please refer to the documentation for ",(0,a.kt)("a",{parentName:"p",href:"/docusaurus/development/testing-framework"},"Testing Framework"),"."),(0,a.kt)("h3",{id:"python-tests"},"Python tests"),(0,a.kt)("h4",{id:"install-dependencies-5"},"Install dependencies"),(0,a.kt)("p",null,"While the Python bindings are built by default, additional dependencies are required to run the Python tests. To install the dependencies, please run the following command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pip3 install -r tools/python_api/requirements_dev.txt\n")),(0,a.kt)("h4",{id:"run-python-tests"},"Run Python tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make pythontest NUM_THREADS=X\n")),(0,a.kt)("h3",{id:"increase-ulimit-for-running-tests"},"Increase ",(0,a.kt)("inlineCode",{parentName:"h3"},"ulimit")," for running tests"),(0,a.kt)("p",null,"For some platforms, such as macOS, the default limit for the number of open files is too low for running tests, which may cause some tests to fail. To increase the limit, please run the following command before running tests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"ulimit -n 10000\n")),(0,a.kt)("h2",{id:"build-language-bindings"},"Build Language Bindings"),(0,a.kt)("p",null,"By default, only C and C++ libraries, CLI, and Python bindings are built. To build other language bindings, please follow the instructions below."),(0,a.kt)("h3",{id:"nodejs"},"Node.js"),(0,a.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Install Node.js and npm. Please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"the download page")," for detailed instructions. The minimum supported version of Node.js is 14.15.0."),(0,a.kt)("h4",{id:"install-dependencies-6"},"Install dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd tools/nodejs_api && npm i --include=dev\n")),(0,a.kt)("h4",{id:"build-nodejs-bindings"},"Build Node.js bindings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make nodejs NUM_THREADS=X\n")),(0,a.kt)("h4",{id:"run-nodejs-tests"},"Run Node.js tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make nodejstest NUM_THREADS=X\n")),(0,a.kt)("h3",{id:"java"},"Java"),(0,a.kt)("h4",{id:"prerequisites-1"},"Prerequisites"),(0,a.kt)("p",null,"The minimum supported version of JDK is 11. Oracle JDK, OpenJDK, and Eclipse Temurin are supported. For detailed instructions on installing JDK, please refer to one of the following links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"For Oracle JDK, please refer to ",(0,a.kt)("a",{parentName:"li",href:"https://www.oracle.com/java/technologies/downloads/"},"the download page"),"."),(0,a.kt)("li",{parentName:"ul"},"For OpenJDK, please refer to ",(0,a.kt)("a",{parentName:"li",href:"https://jdk.java.net/"},"the download page"),"."),(0,a.kt)("li",{parentName:"ul"},"For Eclipse Temurin, please refer to ",(0,a.kt)("a",{parentName:"li",href:"https://adoptium.net/"},"the download page"),".")),(0,a.kt)("h4",{id:"build-java-bindings"},"Build Java bindings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make java NUM_THREADS=X\n")),(0,a.kt)("h4",{id:"run-java-tests"},"Run Java tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"make javatest NUM_THREADS=X\n")),(0,a.kt)("h3",{id:"rust"},"Rust"),(0,a.kt)("h4",{id:"prerequisites-2"},"Prerequisites"),(0,a.kt)("p",null,"Rust 1.67.0 or later is required. Installing Rust with ",(0,a.kt)("a",{parentName:"p",href:"https://rustup.rs/"},"rustup")," is recommended. For detailed instructions, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"the download page"),"."),(0,a.kt)("h4",{id:"build-rust-bindings"},"Build Rust bindings"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd tools/rust_api && CARGO_BUILD_JOBS=X cargo build\n")),(0,a.kt)("h4",{id:"run-rust-tests"},"Run Rust tests"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd tools/rust_api && CARGO_BUILD_JOBS=X cargo test --features arrow -- --test-threads=1\n")))}c.isMDXComponent=!0}}]);