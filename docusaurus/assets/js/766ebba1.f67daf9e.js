"use strict";(self.webpackChunkkuzu_docs=self.webpackChunkkuzu_docs||[]).push([[1881],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,h=p["".concat(i,".").concat(m)]||p[m]||c[m]||l;return t?a.createElement(h,o(o({ref:n},d),{},{components:t})):a.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var a=t(7462),r=(t(7294),t(3905)),l=t(5973);const o={title:"Delete",description:"Delete node records from your tables."},s="Database",i={unversionedId:"cypher/data-manipulation-clauses/delete",id:"cypher/data-manipulation-clauses/delete",title:"Delete",description:"Delete node records from your tables.",source:"@site/docs/cypher/data-manipulation-clauses/delete.md",sourceDirName:"cypher/data-manipulation-clauses",slug:"/cypher/data-manipulation-clauses/delete",permalink:"/docusaurus/cypher/data-manipulation-clauses/delete",draft:!1,tags:[],version:"current",frontMatter:{title:"Delete",description:"Delete node records from your tables."},sidebar:"tutorialSidebar",previous:{title:"Create",permalink:"/docusaurus/cypher/data-manipulation-clauses/create"},next:{title:"Merge",permalink:"/docusaurus/cypher/data-manipulation-clauses/merge"}},u={},d=[{value:"Delete Nodes",id:"delete-nodes",level:2},{value:"Delete Single Label Nodes",id:"delete-single-label-nodes",level:3},{value:"Delete Multi Label Nodes",id:"delete-multi-label-nodes",level:3},{value:"Delete Single Label Relationships",id:"delete-single-label-relationships",level:3},{value:"Delete Multi Label Relationships",id:"delete-multi-label-relationships",level:3}],p={toc:d},c="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"database"},"Database"),(0,r.kt)("p",null,"We will use the database, whose schema and data import commands are given ",(0,r.kt)("a",{parentName:"p",href:"/docusaurus/cypher/query-clauses/example-database"},"here"),":"),(0,r.kt)("img",{src:l.Z,style:{width:800}}),(0,r.kt)("p",null,"You can import this database by copying pasting the commands on that page. "),(0,r.kt)("h1",{id:"delete"},"DELETE"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"DELETE")," clause delete node or relationship records from the table."),(0,r.kt)("h2",{id:"delete-nodes"},"Delete Nodes"),(0,r.kt)("p",null,"We currently only support deleting singleton node records, i.e., those that don't have have any incoming or outgoing relationships. Deleting of nodes with edges are not yet supported."),(0,r.kt)("h3",{id:"delete-single-label-nodes"},"Delete Single Label Nodes"),(0,r.kt)("p",null,"The following query first creates a User (Alice, 40) node record, without inserting any relationships to that node record, and then deletes the record"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE (u:User {name: 'Alice', age: 35});\nMATCH (:User) RETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 5            |\n----------------\nMATCH (u:User) WHERE u.name = 'Alice' DELETE u;\nMATCH (:User) RETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 4            |\n----------------\n")),(0,r.kt)("h3",{id:"delete-multi-label-nodes"},"Delete Multi Label Nodes"),(0,r.kt)("p",null,'The following query first creates a user node and a city node both with name "A" and then delete them. '),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"CREATE (:User {name: 'A'}), (:City {name: 'A'});\nMATCH () RETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 9            |\n----------------\nMATCH (u) WHERE u.name = 'A' DELETE u;\nMATCH () RETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 7            |\n----------------\n")),(0,r.kt)("h1",{id:"delete-relationships"},"Delete Relationships"),(0,r.kt)("h3",{id:"delete-single-label-relationships"},"Delete Single Label Relationships"),(0,r.kt)("p",null,"The following query deletes the ",(0,r.kt)("inlineCode",{parentName:"p"},"Follows")," relationship between ",(0,r.kt)("inlineCode",{parentName:"p"},"Adam")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Karissa"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (u:User)-[f:Follows]->(u1:User)\nWHERE u.name = 'Adam' AND u1.name = 'Karissa'\nRETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 1            |\n----------------\nMATCH (u:User)-[f:Follows]->(u1:User)\nWHERE u.name = 'Adam' AND u1.name = 'Karissa'\nDELETE f;\nMATCH (u:User)-[f:Follows]->(u1:User)\nWHERE u.name = 'Adam' AND u1.name = 'Karissa'\nRETURN COUNT(*);\n----------------\n| COUNT_STAR() |\n----------------\n| 0            |\n----------------\n")),(0,r.kt)("h3",{id:"delete-multi-label-relationships"},"Delete Multi Label Relationships"),(0,r.kt)("p",null,'The following query deletes all out-going edges from "Karissa".'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"MATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nRETURN u.name, u1.name;\n----------------------\n| u.name  | u1.name  |\n----------------------\n| Karissa | Zhang    |\n----------------------\n| Karissa | Waterloo |\n----------------------\nMATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nDELETE f;\nMATCH (u:User)-[f]->(u1)\nWHERE u.name = 'Karissa' \nRETURN u.name, u1.name;\n--------------------\n| u.name | u1.name |\n--------------------\n")))}m.isMDXComponent=!0},5973:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/running-example-db76aa393fd70d29c831f1527455440a.png"}}]);